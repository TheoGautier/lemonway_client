/*
Lemonway DirectKit API 2.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PaymentFormDetails struct for PaymentFormDetails
type PaymentFormDetails struct {
	ParentId *string `json:"parentId,omitempty"`
	ParentComment *string `json:"parentComment,omitempty"`
	AmountTot *string `json:"amountTot,omitempty"`
	Status *string `json:"status,omitempty"`
	// UTC Unix Timestamp
	UtcDate *int32 `json:"utcDate,omitempty"`
	// UTC Unix Timestamp
	Created *int32 `json:"created,omitempty"`
	// Payment Form ID
	Id *string `json:"id,omitempty"`
	// Optional identity of the payment form. You should not use special character here.
	OptId *string `json:"optId,omitempty"`
	// Payer Account  If this field is filled then the money reaches this wallet before arriving at the beneficiary wallet (via a transfer wallet to wallet)  note: Don't put the <b>SC Wallet</b> here, it won't work. You cannot credit the <b>SC Wallet</b> with a credit card.
	AccountPayer *string `json:"accountPayer,omitempty"`
	// Beneficiary Account  if this field is not filled then the end-user must to fill its value on the payment form. We recommend you to always fill it instead of your end-user.  note: Don't put the <b>SC Wallet</b> here, it won't work. You cannot credit the <b>SC Wallet</b> with a credit card.
	AccountReceiver *string `json:"accountReceiver,omitempty"`
	Comment *string `json:"comment,omitempty"`
	// URL redirection after the payment procedure is successfully finished
	ReturnUrl *string `json:"returnUrl,omitempty"`
	// URL redirection after the payment procedure is cancelled
	CancelUrl *string `json:"cancelUrl,omitempty"`
	// URL redirection after the payment procedure is failed
	ErrorUrl *string `json:"errorUrl,omitempty"`
	// Payer's First Name  If this field is not filled then the end-user have to fill it in the payment form.
	FirstNamePayer *string `json:"firstNamePayer,omitempty"`
	// Payer's Last Name  If this field is not filled then the end-user have to fill it in the payment form.
	LastNamePayer *string `json:"lastNamePayer,omitempty"`
	// Payer's Email  If this field is not filled then the end-user have to fill it in the payment form.
	EmailPayer *string `json:"emailPayer,omitempty"`
}

// NewPaymentFormDetails instantiates a new PaymentFormDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentFormDetails() *PaymentFormDetails {
	this := PaymentFormDetails{}
	return &this
}

// NewPaymentFormDetailsWithDefaults instantiates a new PaymentFormDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentFormDetailsWithDefaults() *PaymentFormDetails {
	this := PaymentFormDetails{}
	return &this
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *PaymentFormDetails) GetParentId() string {
	if o == nil || o.ParentId == nil {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentFormDetails) GetParentIdOk() (*string, bool) {
	if o == nil || o.ParentId == nil {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *PaymentFormDetails) HasParentId() bool {
	if o != nil && o.ParentId != nil {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *PaymentFormDetails) SetParentId(v string) {
	o.ParentId = &v
}

// GetParentComment returns the ParentComment field value if set, zero value otherwise.
func (o *PaymentFormDetails) GetParentComment() string {
	if o == nil || o.ParentComment == nil {
		var ret string
		return ret
	}
	return *o.ParentComment
}

// GetParentCommentOk returns a tuple with the ParentComment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentFormDetails) GetParentCommentOk() (*string, bool) {
	if o == nil || o.ParentComment == nil {
		return nil, false
	}
	return o.ParentComment, true
}

// HasParentComment returns a boolean if a field has been set.
func (o *PaymentFormDetails) HasParentComment() bool {
	if o != nil && o.ParentComment != nil {
		return true
	}

	return false
}

// SetParentComment gets a reference to the given string and assigns it to the ParentComment field.
func (o *PaymentFormDetails) SetParentComment(v string) {
	o.ParentComment = &v
}

// GetAmountTot returns the AmountTot field value if set, zero value otherwise.
func (o *PaymentFormDetails) GetAmountTot() string {
	if o == nil || o.AmountTot == nil {
		var ret string
		return ret
	}
	return *o.AmountTot
}

// GetAmountTotOk returns a tuple with the AmountTot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentFormDetails) GetAmountTotOk() (*string, bool) {
	if o == nil || o.AmountTot == nil {
		return nil, false
	}
	return o.AmountTot, true
}

// HasAmountTot returns a boolean if a field has been set.
func (o *PaymentFormDetails) HasAmountTot() bool {
	if o != nil && o.AmountTot != nil {
		return true
	}

	return false
}

// SetAmountTot gets a reference to the given string and assigns it to the AmountTot field.
func (o *PaymentFormDetails) SetAmountTot(v string) {
	o.AmountTot = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PaymentFormDetails) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentFormDetails) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PaymentFormDetails) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *PaymentFormDetails) SetStatus(v string) {
	o.Status = &v
}

// GetUtcDate returns the UtcDate field value if set, zero value otherwise.
func (o *PaymentFormDetails) GetUtcDate() int32 {
	if o == nil || o.UtcDate == nil {
		var ret int32
		return ret
	}
	return *o.UtcDate
}

// GetUtcDateOk returns a tuple with the UtcDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentFormDetails) GetUtcDateOk() (*int32, bool) {
	if o == nil || o.UtcDate == nil {
		return nil, false
	}
	return o.UtcDate, true
}

// HasUtcDate returns a boolean if a field has been set.
func (o *PaymentFormDetails) HasUtcDate() bool {
	if o != nil && o.UtcDate != nil {
		return true
	}

	return false
}

// SetUtcDate gets a reference to the given int32 and assigns it to the UtcDate field.
func (o *PaymentFormDetails) SetUtcDate(v int32) {
	o.UtcDate = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *PaymentFormDetails) GetCreated() int32 {
	if o == nil || o.Created == nil {
		var ret int32
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentFormDetails) GetCreatedOk() (*int32, bool) {
	if o == nil || o.Created == nil {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *PaymentFormDetails) HasCreated() bool {
	if o != nil && o.Created != nil {
		return true
	}

	return false
}

// SetCreated gets a reference to the given int32 and assigns it to the Created field.
func (o *PaymentFormDetails) SetCreated(v int32) {
	o.Created = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PaymentFormDetails) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentFormDetails) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PaymentFormDetails) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PaymentFormDetails) SetId(v string) {
	o.Id = &v
}

// GetOptId returns the OptId field value if set, zero value otherwise.
func (o *PaymentFormDetails) GetOptId() string {
	if o == nil || o.OptId == nil {
		var ret string
		return ret
	}
	return *o.OptId
}

// GetOptIdOk returns a tuple with the OptId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentFormDetails) GetOptIdOk() (*string, bool) {
	if o == nil || o.OptId == nil {
		return nil, false
	}
	return o.OptId, true
}

// HasOptId returns a boolean if a field has been set.
func (o *PaymentFormDetails) HasOptId() bool {
	if o != nil && o.OptId != nil {
		return true
	}

	return false
}

// SetOptId gets a reference to the given string and assigns it to the OptId field.
func (o *PaymentFormDetails) SetOptId(v string) {
	o.OptId = &v
}

// GetAccountPayer returns the AccountPayer field value if set, zero value otherwise.
func (o *PaymentFormDetails) GetAccountPayer() string {
	if o == nil || o.AccountPayer == nil {
		var ret string
		return ret
	}
	return *o.AccountPayer
}

// GetAccountPayerOk returns a tuple with the AccountPayer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentFormDetails) GetAccountPayerOk() (*string, bool) {
	if o == nil || o.AccountPayer == nil {
		return nil, false
	}
	return o.AccountPayer, true
}

// HasAccountPayer returns a boolean if a field has been set.
func (o *PaymentFormDetails) HasAccountPayer() bool {
	if o != nil && o.AccountPayer != nil {
		return true
	}

	return false
}

// SetAccountPayer gets a reference to the given string and assigns it to the AccountPayer field.
func (o *PaymentFormDetails) SetAccountPayer(v string) {
	o.AccountPayer = &v
}

// GetAccountReceiver returns the AccountReceiver field value if set, zero value otherwise.
func (o *PaymentFormDetails) GetAccountReceiver() string {
	if o == nil || o.AccountReceiver == nil {
		var ret string
		return ret
	}
	return *o.AccountReceiver
}

// GetAccountReceiverOk returns a tuple with the AccountReceiver field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentFormDetails) GetAccountReceiverOk() (*string, bool) {
	if o == nil || o.AccountReceiver == nil {
		return nil, false
	}
	return o.AccountReceiver, true
}

// HasAccountReceiver returns a boolean if a field has been set.
func (o *PaymentFormDetails) HasAccountReceiver() bool {
	if o != nil && o.AccountReceiver != nil {
		return true
	}

	return false
}

// SetAccountReceiver gets a reference to the given string and assigns it to the AccountReceiver field.
func (o *PaymentFormDetails) SetAccountReceiver(v string) {
	o.AccountReceiver = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *PaymentFormDetails) GetComment() string {
	if o == nil || o.Comment == nil {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentFormDetails) GetCommentOk() (*string, bool) {
	if o == nil || o.Comment == nil {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *PaymentFormDetails) HasComment() bool {
	if o != nil && o.Comment != nil {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *PaymentFormDetails) SetComment(v string) {
	o.Comment = &v
}

// GetReturnUrl returns the ReturnUrl field value if set, zero value otherwise.
func (o *PaymentFormDetails) GetReturnUrl() string {
	if o == nil || o.ReturnUrl == nil {
		var ret string
		return ret
	}
	return *o.ReturnUrl
}

// GetReturnUrlOk returns a tuple with the ReturnUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentFormDetails) GetReturnUrlOk() (*string, bool) {
	if o == nil || o.ReturnUrl == nil {
		return nil, false
	}
	return o.ReturnUrl, true
}

// HasReturnUrl returns a boolean if a field has been set.
func (o *PaymentFormDetails) HasReturnUrl() bool {
	if o != nil && o.ReturnUrl != nil {
		return true
	}

	return false
}

// SetReturnUrl gets a reference to the given string and assigns it to the ReturnUrl field.
func (o *PaymentFormDetails) SetReturnUrl(v string) {
	o.ReturnUrl = &v
}

// GetCancelUrl returns the CancelUrl field value if set, zero value otherwise.
func (o *PaymentFormDetails) GetCancelUrl() string {
	if o == nil || o.CancelUrl == nil {
		var ret string
		return ret
	}
	return *o.CancelUrl
}

// GetCancelUrlOk returns a tuple with the CancelUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentFormDetails) GetCancelUrlOk() (*string, bool) {
	if o == nil || o.CancelUrl == nil {
		return nil, false
	}
	return o.CancelUrl, true
}

// HasCancelUrl returns a boolean if a field has been set.
func (o *PaymentFormDetails) HasCancelUrl() bool {
	if o != nil && o.CancelUrl != nil {
		return true
	}

	return false
}

// SetCancelUrl gets a reference to the given string and assigns it to the CancelUrl field.
func (o *PaymentFormDetails) SetCancelUrl(v string) {
	o.CancelUrl = &v
}

// GetErrorUrl returns the ErrorUrl field value if set, zero value otherwise.
func (o *PaymentFormDetails) GetErrorUrl() string {
	if o == nil || o.ErrorUrl == nil {
		var ret string
		return ret
	}
	return *o.ErrorUrl
}

// GetErrorUrlOk returns a tuple with the ErrorUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentFormDetails) GetErrorUrlOk() (*string, bool) {
	if o == nil || o.ErrorUrl == nil {
		return nil, false
	}
	return o.ErrorUrl, true
}

// HasErrorUrl returns a boolean if a field has been set.
func (o *PaymentFormDetails) HasErrorUrl() bool {
	if o != nil && o.ErrorUrl != nil {
		return true
	}

	return false
}

// SetErrorUrl gets a reference to the given string and assigns it to the ErrorUrl field.
func (o *PaymentFormDetails) SetErrorUrl(v string) {
	o.ErrorUrl = &v
}

// GetFirstNamePayer returns the FirstNamePayer field value if set, zero value otherwise.
func (o *PaymentFormDetails) GetFirstNamePayer() string {
	if o == nil || o.FirstNamePayer == nil {
		var ret string
		return ret
	}
	return *o.FirstNamePayer
}

// GetFirstNamePayerOk returns a tuple with the FirstNamePayer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentFormDetails) GetFirstNamePayerOk() (*string, bool) {
	if o == nil || o.FirstNamePayer == nil {
		return nil, false
	}
	return o.FirstNamePayer, true
}

// HasFirstNamePayer returns a boolean if a field has been set.
func (o *PaymentFormDetails) HasFirstNamePayer() bool {
	if o != nil && o.FirstNamePayer != nil {
		return true
	}

	return false
}

// SetFirstNamePayer gets a reference to the given string and assigns it to the FirstNamePayer field.
func (o *PaymentFormDetails) SetFirstNamePayer(v string) {
	o.FirstNamePayer = &v
}

// GetLastNamePayer returns the LastNamePayer field value if set, zero value otherwise.
func (o *PaymentFormDetails) GetLastNamePayer() string {
	if o == nil || o.LastNamePayer == nil {
		var ret string
		return ret
	}
	return *o.LastNamePayer
}

// GetLastNamePayerOk returns a tuple with the LastNamePayer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentFormDetails) GetLastNamePayerOk() (*string, bool) {
	if o == nil || o.LastNamePayer == nil {
		return nil, false
	}
	return o.LastNamePayer, true
}

// HasLastNamePayer returns a boolean if a field has been set.
func (o *PaymentFormDetails) HasLastNamePayer() bool {
	if o != nil && o.LastNamePayer != nil {
		return true
	}

	return false
}

// SetLastNamePayer gets a reference to the given string and assigns it to the LastNamePayer field.
func (o *PaymentFormDetails) SetLastNamePayer(v string) {
	o.LastNamePayer = &v
}

// GetEmailPayer returns the EmailPayer field value if set, zero value otherwise.
func (o *PaymentFormDetails) GetEmailPayer() string {
	if o == nil || o.EmailPayer == nil {
		var ret string
		return ret
	}
	return *o.EmailPayer
}

// GetEmailPayerOk returns a tuple with the EmailPayer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentFormDetails) GetEmailPayerOk() (*string, bool) {
	if o == nil || o.EmailPayer == nil {
		return nil, false
	}
	return o.EmailPayer, true
}

// HasEmailPayer returns a boolean if a field has been set.
func (o *PaymentFormDetails) HasEmailPayer() bool {
	if o != nil && o.EmailPayer != nil {
		return true
	}

	return false
}

// SetEmailPayer gets a reference to the given string and assigns it to the EmailPayer field.
func (o *PaymentFormDetails) SetEmailPayer(v string) {
	o.EmailPayer = &v
}

func (o PaymentFormDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ParentId != nil {
		toSerialize["parentId"] = o.ParentId
	}
	if o.ParentComment != nil {
		toSerialize["parentComment"] = o.ParentComment
	}
	if o.AmountTot != nil {
		toSerialize["amountTot"] = o.AmountTot
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.UtcDate != nil {
		toSerialize["utcDate"] = o.UtcDate
	}
	if o.Created != nil {
		toSerialize["created"] = o.Created
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.OptId != nil {
		toSerialize["optId"] = o.OptId
	}
	if o.AccountPayer != nil {
		toSerialize["accountPayer"] = o.AccountPayer
	}
	if o.AccountReceiver != nil {
		toSerialize["accountReceiver"] = o.AccountReceiver
	}
	if o.Comment != nil {
		toSerialize["comment"] = o.Comment
	}
	if o.ReturnUrl != nil {
		toSerialize["returnUrl"] = o.ReturnUrl
	}
	if o.CancelUrl != nil {
		toSerialize["cancelUrl"] = o.CancelUrl
	}
	if o.ErrorUrl != nil {
		toSerialize["errorUrl"] = o.ErrorUrl
	}
	if o.FirstNamePayer != nil {
		toSerialize["firstNamePayer"] = o.FirstNamePayer
	}
	if o.LastNamePayer != nil {
		toSerialize["lastNamePayer"] = o.LastNamePayer
	}
	if o.EmailPayer != nil {
		toSerialize["emailPayer"] = o.EmailPayer
	}
	return json.Marshal(toSerialize)
}

type NullablePaymentFormDetails struct {
	value *PaymentFormDetails
	isSet bool
}

func (v NullablePaymentFormDetails) Get() *PaymentFormDetails {
	return v.value
}

func (v *NullablePaymentFormDetails) Set(val *PaymentFormDetails) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentFormDetails) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentFormDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentFormDetails(val *PaymentFormDetails) *NullablePaymentFormDetails {
	return &NullablePaymentFormDetails{value: val, isSet: true}
}

func (v NullablePaymentFormDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentFormDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


