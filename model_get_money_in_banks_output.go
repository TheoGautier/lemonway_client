/*
Lemonway DirectKit API 2.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetMoneyInBanksOutput struct for GetMoneyInBanksOutput
type GetMoneyInBanksOutput struct {
	Banks *map[string][]Bank `json:"banks,omitempty"`
	Error *Error `json:"error,omitempty"`
}

// NewGetMoneyInBanksOutput instantiates a new GetMoneyInBanksOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetMoneyInBanksOutput() *GetMoneyInBanksOutput {
	this := GetMoneyInBanksOutput{}
	return &this
}

// NewGetMoneyInBanksOutputWithDefaults instantiates a new GetMoneyInBanksOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetMoneyInBanksOutputWithDefaults() *GetMoneyInBanksOutput {
	this := GetMoneyInBanksOutput{}
	return &this
}

// GetBanks returns the Banks field value if set, zero value otherwise.
func (o *GetMoneyInBanksOutput) GetBanks() map[string][]Bank {
	if o == nil || o.Banks == nil {
		var ret map[string][]Bank
		return ret
	}
	return *o.Banks
}

// GetBanksOk returns a tuple with the Banks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMoneyInBanksOutput) GetBanksOk() (*map[string][]Bank, bool) {
	if o == nil || o.Banks == nil {
		return nil, false
	}
	return o.Banks, true
}

// HasBanks returns a boolean if a field has been set.
func (o *GetMoneyInBanksOutput) HasBanks() bool {
	if o != nil && o.Banks != nil {
		return true
	}

	return false
}

// SetBanks gets a reference to the given map[string][]Bank and assigns it to the Banks field.
func (o *GetMoneyInBanksOutput) SetBanks(v map[string][]Bank) {
	o.Banks = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *GetMoneyInBanksOutput) GetError() Error {
	if o == nil || o.Error == nil {
		var ret Error
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMoneyInBanksOutput) GetErrorOk() (*Error, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *GetMoneyInBanksOutput) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given Error and assigns it to the Error field.
func (o *GetMoneyInBanksOutput) SetError(v Error) {
	o.Error = &v
}

func (o GetMoneyInBanksOutput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Banks != nil {
		toSerialize["banks"] = o.Banks
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullableGetMoneyInBanksOutput struct {
	value *GetMoneyInBanksOutput
	isSet bool
}

func (v NullableGetMoneyInBanksOutput) Get() *GetMoneyInBanksOutput {
	return v.value
}

func (v *NullableGetMoneyInBanksOutput) Set(val *GetMoneyInBanksOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMoneyInBanksOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMoneyInBanksOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMoneyInBanksOutput(val *GetMoneyInBanksOutput) *NullableGetMoneyInBanksOutput {
	return &NullableGetMoneyInBanksOutput{value: val, isSet: true}
}

func (v NullableGetMoneyInBanksOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMoneyInBanksOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


