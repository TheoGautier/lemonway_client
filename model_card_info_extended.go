/*
Lemonway DirectKit API 2.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CardInfoExtended struct for CardInfoExtended
type CardInfoExtended struct {
	// Card Holder
	CardHolder *string `json:"cardHolder,omitempty"`
	// Card Type<br/>0 = CB.<br/>1 = Visa.<br/>2 = Mastercard.<br/>
	CardType int32 `json:"cardType"`
	// Masked Card Number
	CardNumber string `json:"cardNumber"`
	// Card Expiration Date
	CardDate string `json:"cardDate"`
	// Card Country
	CardCountry *string `json:"cardCountry,omitempty"`
}

// NewCardInfoExtended instantiates a new CardInfoExtended object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCardInfoExtended(cardType int32, cardNumber string, cardDate string) *CardInfoExtended {
	this := CardInfoExtended{}
	this.CardType = cardType
	this.CardNumber = cardNumber
	this.CardDate = cardDate
	return &this
}

// NewCardInfoExtendedWithDefaults instantiates a new CardInfoExtended object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCardInfoExtendedWithDefaults() *CardInfoExtended {
	this := CardInfoExtended{}
	return &this
}

// GetCardHolder returns the CardHolder field value if set, zero value otherwise.
func (o *CardInfoExtended) GetCardHolder() string {
	if o == nil || o.CardHolder == nil {
		var ret string
		return ret
	}
	return *o.CardHolder
}

// GetCardHolderOk returns a tuple with the CardHolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardInfoExtended) GetCardHolderOk() (*string, bool) {
	if o == nil || o.CardHolder == nil {
		return nil, false
	}
	return o.CardHolder, true
}

// HasCardHolder returns a boolean if a field has been set.
func (o *CardInfoExtended) HasCardHolder() bool {
	if o != nil && o.CardHolder != nil {
		return true
	}

	return false
}

// SetCardHolder gets a reference to the given string and assigns it to the CardHolder field.
func (o *CardInfoExtended) SetCardHolder(v string) {
	o.CardHolder = &v
}

// GetCardType returns the CardType field value
func (o *CardInfoExtended) GetCardType() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CardType
}

// GetCardTypeOk returns a tuple with the CardType field value
// and a boolean to check if the value has been set.
func (o *CardInfoExtended) GetCardTypeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CardType, true
}

// SetCardType sets field value
func (o *CardInfoExtended) SetCardType(v int32) {
	o.CardType = v
}

// GetCardNumber returns the CardNumber field value
func (o *CardInfoExtended) GetCardNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CardNumber
}

// GetCardNumberOk returns a tuple with the CardNumber field value
// and a boolean to check if the value has been set.
func (o *CardInfoExtended) GetCardNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CardNumber, true
}

// SetCardNumber sets field value
func (o *CardInfoExtended) SetCardNumber(v string) {
	o.CardNumber = v
}

// GetCardDate returns the CardDate field value
func (o *CardInfoExtended) GetCardDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CardDate
}

// GetCardDateOk returns a tuple with the CardDate field value
// and a boolean to check if the value has been set.
func (o *CardInfoExtended) GetCardDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CardDate, true
}

// SetCardDate sets field value
func (o *CardInfoExtended) SetCardDate(v string) {
	o.CardDate = v
}

// GetCardCountry returns the CardCountry field value if set, zero value otherwise.
func (o *CardInfoExtended) GetCardCountry() string {
	if o == nil || o.CardCountry == nil {
		var ret string
		return ret
	}
	return *o.CardCountry
}

// GetCardCountryOk returns a tuple with the CardCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardInfoExtended) GetCardCountryOk() (*string, bool) {
	if o == nil || o.CardCountry == nil {
		return nil, false
	}
	return o.CardCountry, true
}

// HasCardCountry returns a boolean if a field has been set.
func (o *CardInfoExtended) HasCardCountry() bool {
	if o != nil && o.CardCountry != nil {
		return true
	}

	return false
}

// SetCardCountry gets a reference to the given string and assigns it to the CardCountry field.
func (o *CardInfoExtended) SetCardCountry(v string) {
	o.CardCountry = &v
}

func (o CardInfoExtended) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CardHolder != nil {
		toSerialize["cardHolder"] = o.CardHolder
	}
	if true {
		toSerialize["cardType"] = o.CardType
	}
	if true {
		toSerialize["cardNumber"] = o.CardNumber
	}
	if true {
		toSerialize["cardDate"] = o.CardDate
	}
	if o.CardCountry != nil {
		toSerialize["cardCountry"] = o.CardCountry
	}
	return json.Marshal(toSerialize)
}

type NullableCardInfoExtended struct {
	value *CardInfoExtended
	isSet bool
}

func (v NullableCardInfoExtended) Get() *CardInfoExtended {
	return v.value
}

func (v *NullableCardInfoExtended) Set(val *CardInfoExtended) {
	v.value = val
	v.isSet = true
}

func (v NullableCardInfoExtended) IsSet() bool {
	return v.isSet
}

func (v *NullableCardInfoExtended) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCardInfoExtended(val *CardInfoExtended) *NullableCardInfoExtended {
	return &NullableCardInfoExtended{value: val, isSet: true}
}

func (v NullableCardInfoExtended) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCardInfoExtended) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


