/*
Lemonway DirectKit API 2.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InitPayPalTransactionInput Init PayPal transaction input
type InitPayPalTransactionInput struct {
	Redirections Redirections `json:"redirections"`
	Transaction Transaction `json:"transaction"`
	AmountBreakdown *AmountBreakdown `json:"amountBreakdown,omitempty"`
	Delivery *Delivery `json:"delivery,omitempty"`
	// Items
	Items []PurchaseItem `json:"items"`
	// Risk data
	RiskData *map[string]string `json:"riskData,omitempty"`
}

// NewInitPayPalTransactionInput instantiates a new InitPayPalTransactionInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInitPayPalTransactionInput(redirections Redirections, transaction Transaction, items []PurchaseItem) *InitPayPalTransactionInput {
	this := InitPayPalTransactionInput{}
	this.Redirections = redirections
	this.Transaction = transaction
	this.Items = items
	return &this
}

// NewInitPayPalTransactionInputWithDefaults instantiates a new InitPayPalTransactionInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInitPayPalTransactionInputWithDefaults() *InitPayPalTransactionInput {
	this := InitPayPalTransactionInput{}
	return &this
}

// GetRedirections returns the Redirections field value
func (o *InitPayPalTransactionInput) GetRedirections() Redirections {
	if o == nil {
		var ret Redirections
		return ret
	}

	return o.Redirections
}

// GetRedirectionsOk returns a tuple with the Redirections field value
// and a boolean to check if the value has been set.
func (o *InitPayPalTransactionInput) GetRedirectionsOk() (*Redirections, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Redirections, true
}

// SetRedirections sets field value
func (o *InitPayPalTransactionInput) SetRedirections(v Redirections) {
	o.Redirections = v
}

// GetTransaction returns the Transaction field value
func (o *InitPayPalTransactionInput) GetTransaction() Transaction {
	if o == nil {
		var ret Transaction
		return ret
	}

	return o.Transaction
}

// GetTransactionOk returns a tuple with the Transaction field value
// and a boolean to check if the value has been set.
func (o *InitPayPalTransactionInput) GetTransactionOk() (*Transaction, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Transaction, true
}

// SetTransaction sets field value
func (o *InitPayPalTransactionInput) SetTransaction(v Transaction) {
	o.Transaction = v
}

// GetAmountBreakdown returns the AmountBreakdown field value if set, zero value otherwise.
func (o *InitPayPalTransactionInput) GetAmountBreakdown() AmountBreakdown {
	if o == nil || o.AmountBreakdown == nil {
		var ret AmountBreakdown
		return ret
	}
	return *o.AmountBreakdown
}

// GetAmountBreakdownOk returns a tuple with the AmountBreakdown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InitPayPalTransactionInput) GetAmountBreakdownOk() (*AmountBreakdown, bool) {
	if o == nil || o.AmountBreakdown == nil {
		return nil, false
	}
	return o.AmountBreakdown, true
}

// HasAmountBreakdown returns a boolean if a field has been set.
func (o *InitPayPalTransactionInput) HasAmountBreakdown() bool {
	if o != nil && o.AmountBreakdown != nil {
		return true
	}

	return false
}

// SetAmountBreakdown gets a reference to the given AmountBreakdown and assigns it to the AmountBreakdown field.
func (o *InitPayPalTransactionInput) SetAmountBreakdown(v AmountBreakdown) {
	o.AmountBreakdown = &v
}

// GetDelivery returns the Delivery field value if set, zero value otherwise.
func (o *InitPayPalTransactionInput) GetDelivery() Delivery {
	if o == nil || o.Delivery == nil {
		var ret Delivery
		return ret
	}
	return *o.Delivery
}

// GetDeliveryOk returns a tuple with the Delivery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InitPayPalTransactionInput) GetDeliveryOk() (*Delivery, bool) {
	if o == nil || o.Delivery == nil {
		return nil, false
	}
	return o.Delivery, true
}

// HasDelivery returns a boolean if a field has been set.
func (o *InitPayPalTransactionInput) HasDelivery() bool {
	if o != nil && o.Delivery != nil {
		return true
	}

	return false
}

// SetDelivery gets a reference to the given Delivery and assigns it to the Delivery field.
func (o *InitPayPalTransactionInput) SetDelivery(v Delivery) {
	o.Delivery = &v
}

// GetItems returns the Items field value
func (o *InitPayPalTransactionInput) GetItems() []PurchaseItem {
	if o == nil {
		var ret []PurchaseItem
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *InitPayPalTransactionInput) GetItemsOk() ([]PurchaseItem, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *InitPayPalTransactionInput) SetItems(v []PurchaseItem) {
	o.Items = v
}

// GetRiskData returns the RiskData field value if set, zero value otherwise.
func (o *InitPayPalTransactionInput) GetRiskData() map[string]string {
	if o == nil || o.RiskData == nil {
		var ret map[string]string
		return ret
	}
	return *o.RiskData
}

// GetRiskDataOk returns a tuple with the RiskData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InitPayPalTransactionInput) GetRiskDataOk() (*map[string]string, bool) {
	if o == nil || o.RiskData == nil {
		return nil, false
	}
	return o.RiskData, true
}

// HasRiskData returns a boolean if a field has been set.
func (o *InitPayPalTransactionInput) HasRiskData() bool {
	if o != nil && o.RiskData != nil {
		return true
	}

	return false
}

// SetRiskData gets a reference to the given map[string]string and assigns it to the RiskData field.
func (o *InitPayPalTransactionInput) SetRiskData(v map[string]string) {
	o.RiskData = &v
}

func (o InitPayPalTransactionInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["redirections"] = o.Redirections
	}
	if true {
		toSerialize["transaction"] = o.Transaction
	}
	if o.AmountBreakdown != nil {
		toSerialize["amountBreakdown"] = o.AmountBreakdown
	}
	if o.Delivery != nil {
		toSerialize["delivery"] = o.Delivery
	}
	if true {
		toSerialize["items"] = o.Items
	}
	if o.RiskData != nil {
		toSerialize["riskData"] = o.RiskData
	}
	return json.Marshal(toSerialize)
}

type NullableInitPayPalTransactionInput struct {
	value *InitPayPalTransactionInput
	isSet bool
}

func (v NullableInitPayPalTransactionInput) Get() *InitPayPalTransactionInput {
	return v.value
}

func (v *NullableInitPayPalTransactionInput) Set(val *InitPayPalTransactionInput) {
	v.value = val
	v.isSet = true
}

func (v NullableInitPayPalTransactionInput) IsSet() bool {
	return v.isSet
}

func (v *NullableInitPayPalTransactionInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInitPayPalTransactionInput(val *InitPayPalTransactionInput) *NullableInitPayPalTransactionInput {
	return &NullableInitPayPalTransactionInput{value: val, isSet: true}
}

func (v NullableInitPayPalTransactionInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInitPayPalTransactionInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


