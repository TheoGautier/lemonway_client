/*
Lemonway DirectKit API 2.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AccountBlock struct for AccountBlock
type AccountBlock struct {
	// Updated payment account ID
	Id *string `json:"id,omitempty"`
	// Status of the payment account  1: is bocked true  0: is blocked false
	IsBlocked *bool `json:"isBlocked,omitempty"`
}

// NewAccountBlock instantiates a new AccountBlock object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountBlock() *AccountBlock {
	this := AccountBlock{}
	return &this
}

// NewAccountBlockWithDefaults instantiates a new AccountBlock object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountBlockWithDefaults() *AccountBlock {
	this := AccountBlock{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AccountBlock) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountBlock) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AccountBlock) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AccountBlock) SetId(v string) {
	o.Id = &v
}

// GetIsBlocked returns the IsBlocked field value if set, zero value otherwise.
func (o *AccountBlock) GetIsBlocked() bool {
	if o == nil || o.IsBlocked == nil {
		var ret bool
		return ret
	}
	return *o.IsBlocked
}

// GetIsBlockedOk returns a tuple with the IsBlocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountBlock) GetIsBlockedOk() (*bool, bool) {
	if o == nil || o.IsBlocked == nil {
		return nil, false
	}
	return o.IsBlocked, true
}

// HasIsBlocked returns a boolean if a field has been set.
func (o *AccountBlock) HasIsBlocked() bool {
	if o != nil && o.IsBlocked != nil {
		return true
	}

	return false
}

// SetIsBlocked gets a reference to the given bool and assigns it to the IsBlocked field.
func (o *AccountBlock) SetIsBlocked(v bool) {
	o.IsBlocked = &v
}

func (o AccountBlock) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.IsBlocked != nil {
		toSerialize["isBlocked"] = o.IsBlocked
	}
	return json.Marshal(toSerialize)
}

type NullableAccountBlock struct {
	value *AccountBlock
	isSet bool
}

func (v NullableAccountBlock) Get() *AccountBlock {
	return v.value
}

func (v *NullableAccountBlock) Set(val *AccountBlock) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountBlock) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountBlock) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountBlock(val *AccountBlock) *NullableAccountBlock {
	return &NullableAccountBlock{value: val, isSet: true}
}

func (v NullableAccountBlock) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountBlock) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


