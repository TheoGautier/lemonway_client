/*
Lemonway DirectKit API 2.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InitPayPalTransactionOutput Init PayPal transaction Output
type InitPayPalTransactionOutput struct {
	// Money-in Id
	Id int64 `json:"id"`
	// Redirection Url
	RedirectionUrl string `json:"redirectionUrl"`
	// PayPal Order Id
	PayPalOrderId string `json:"payPalOrderId"`
	Error *Error `json:"error,omitempty"`
}

// NewInitPayPalTransactionOutput instantiates a new InitPayPalTransactionOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInitPayPalTransactionOutput(id int64, redirectionUrl string, payPalOrderId string) *InitPayPalTransactionOutput {
	this := InitPayPalTransactionOutput{}
	this.Id = id
	this.RedirectionUrl = redirectionUrl
	this.PayPalOrderId = payPalOrderId
	return &this
}

// NewInitPayPalTransactionOutputWithDefaults instantiates a new InitPayPalTransactionOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInitPayPalTransactionOutputWithDefaults() *InitPayPalTransactionOutput {
	this := InitPayPalTransactionOutput{}
	return &this
}

// GetId returns the Id field value
func (o *InitPayPalTransactionOutput) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *InitPayPalTransactionOutput) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *InitPayPalTransactionOutput) SetId(v int64) {
	o.Id = v
}

// GetRedirectionUrl returns the RedirectionUrl field value
func (o *InitPayPalTransactionOutput) GetRedirectionUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RedirectionUrl
}

// GetRedirectionUrlOk returns a tuple with the RedirectionUrl field value
// and a boolean to check if the value has been set.
func (o *InitPayPalTransactionOutput) GetRedirectionUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RedirectionUrl, true
}

// SetRedirectionUrl sets field value
func (o *InitPayPalTransactionOutput) SetRedirectionUrl(v string) {
	o.RedirectionUrl = v
}

// GetPayPalOrderId returns the PayPalOrderId field value
func (o *InitPayPalTransactionOutput) GetPayPalOrderId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PayPalOrderId
}

// GetPayPalOrderIdOk returns a tuple with the PayPalOrderId field value
// and a boolean to check if the value has been set.
func (o *InitPayPalTransactionOutput) GetPayPalOrderIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PayPalOrderId, true
}

// SetPayPalOrderId sets field value
func (o *InitPayPalTransactionOutput) SetPayPalOrderId(v string) {
	o.PayPalOrderId = v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *InitPayPalTransactionOutput) GetError() Error {
	if o == nil || o.Error == nil {
		var ret Error
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InitPayPalTransactionOutput) GetErrorOk() (*Error, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *InitPayPalTransactionOutput) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given Error and assigns it to the Error field.
func (o *InitPayPalTransactionOutput) SetError(v Error) {
	o.Error = &v
}

func (o InitPayPalTransactionOutput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["redirectionUrl"] = o.RedirectionUrl
	}
	if true {
		toSerialize["payPalOrderId"] = o.PayPalOrderId
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullableInitPayPalTransactionOutput struct {
	value *InitPayPalTransactionOutput
	isSet bool
}

func (v NullableInitPayPalTransactionOutput) Get() *InitPayPalTransactionOutput {
	return v.value
}

func (v *NullableInitPayPalTransactionOutput) Set(val *InitPayPalTransactionOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableInitPayPalTransactionOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableInitPayPalTransactionOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInitPayPalTransactionOutput(val *InitPayPalTransactionOutput) *NullableInitPayPalTransactionOutput {
	return &NullableInitPayPalTransactionOutput{value: val, isSet: true}
}

func (v NullableInitPayPalTransactionOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInitPayPalTransactionOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


