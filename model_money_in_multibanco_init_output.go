/*
Lemonway DirectKit API 2.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MoneyInMultibancoInitOutput struct for MoneyInMultibancoInitOutput
type MoneyInMultibancoInitOutput struct {
	EuPagoInit *EuPagoInit `json:"euPagoInit,omitempty"`
	Error *Error `json:"error,omitempty"`
}

// NewMoneyInMultibancoInitOutput instantiates a new MoneyInMultibancoInitOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMoneyInMultibancoInitOutput() *MoneyInMultibancoInitOutput {
	this := MoneyInMultibancoInitOutput{}
	return &this
}

// NewMoneyInMultibancoInitOutputWithDefaults instantiates a new MoneyInMultibancoInitOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMoneyInMultibancoInitOutputWithDefaults() *MoneyInMultibancoInitOutput {
	this := MoneyInMultibancoInitOutput{}
	return &this
}

// GetEuPagoInit returns the EuPagoInit field value if set, zero value otherwise.
func (o *MoneyInMultibancoInitOutput) GetEuPagoInit() EuPagoInit {
	if o == nil || o.EuPagoInit == nil {
		var ret EuPagoInit
		return ret
	}
	return *o.EuPagoInit
}

// GetEuPagoInitOk returns a tuple with the EuPagoInit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoneyInMultibancoInitOutput) GetEuPagoInitOk() (*EuPagoInit, bool) {
	if o == nil || o.EuPagoInit == nil {
		return nil, false
	}
	return o.EuPagoInit, true
}

// HasEuPagoInit returns a boolean if a field has been set.
func (o *MoneyInMultibancoInitOutput) HasEuPagoInit() bool {
	if o != nil && o.EuPagoInit != nil {
		return true
	}

	return false
}

// SetEuPagoInit gets a reference to the given EuPagoInit and assigns it to the EuPagoInit field.
func (o *MoneyInMultibancoInitOutput) SetEuPagoInit(v EuPagoInit) {
	o.EuPagoInit = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *MoneyInMultibancoInitOutput) GetError() Error {
	if o == nil || o.Error == nil {
		var ret Error
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoneyInMultibancoInitOutput) GetErrorOk() (*Error, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *MoneyInMultibancoInitOutput) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given Error and assigns it to the Error field.
func (o *MoneyInMultibancoInitOutput) SetError(v Error) {
	o.Error = &v
}

func (o MoneyInMultibancoInitOutput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EuPagoInit != nil {
		toSerialize["euPagoInit"] = o.EuPagoInit
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullableMoneyInMultibancoInitOutput struct {
	value *MoneyInMultibancoInitOutput
	isSet bool
}

func (v NullableMoneyInMultibancoInitOutput) Get() *MoneyInMultibancoInitOutput {
	return v.value
}

func (v *NullableMoneyInMultibancoInitOutput) Set(val *MoneyInMultibancoInitOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableMoneyInMultibancoInitOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableMoneyInMultibancoInitOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMoneyInMultibancoInitOutput(val *MoneyInMultibancoInitOutput) *NullableMoneyInMultibancoInitOutput {
	return &NullableMoneyInMultibancoInitOutput{value: val, isSet: true}
}

func (v NullableMoneyInMultibancoInitOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMoneyInMultibancoInitOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


