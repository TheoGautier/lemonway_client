/*
Lemonway DirectKit API 2.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UpdateLegalAccountDetailsInput struct for UpdateLegalAccountDetailsInput
type UpdateLegalAccountDetailsInput struct {
	Company Company `json:"company"`
	// New Email.
	Email *string `json:"email,omitempty"`
	// Client title
	Title *string `json:"title,omitempty"`
	// Client first name
	FirstName *string `json:"firstName,omitempty"`
	// Client last name
	LastName *string `json:"lastName,omitempty"`
	Adresse *Address `json:"adresse,omitempty"`
	Birth *Birth `json:"Birth,omitempty"`
	// MSISDN phone number
	PhoneNumber *string `json:"phoneNumber,omitempty"`
	// Mobile phone number with MSISDN format: international number with country code without \"00\" neither \"+\".<br />   This will be used by default when eletronically signing documents.
	MobileNumber *string `json:"mobileNumber,omitempty"`
	// For crowdfunding/loan platforms, indicate if the wallet is created for a debtor.
	IsDebtor *bool `json:"isDebtor,omitempty"`
	// client nationality, using ISO 3166-1 alpha-3 format.  Separate multiple nationalities with a comma.
	Nationality *string `json:"nationality,omitempty"`
	// Indicates if the payment account is created for a payer or a beneficiary:  Empty: unknown status (default)  1: Payer  2: Beneficiary
	PayerOrBeneficiary *int32 `json:"payerOrBeneficiary,omitempty"`
	// **Important:** This object is deprecated and no longer permissible in accordance with EU compliance rules.
	IsCompany *bool `json:"isCompany,omitempty"`
}

// NewUpdateLegalAccountDetailsInput instantiates a new UpdateLegalAccountDetailsInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateLegalAccountDetailsInput(company Company) *UpdateLegalAccountDetailsInput {
	this := UpdateLegalAccountDetailsInput{}
	this.Company = company
	return &this
}

// NewUpdateLegalAccountDetailsInputWithDefaults instantiates a new UpdateLegalAccountDetailsInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateLegalAccountDetailsInputWithDefaults() *UpdateLegalAccountDetailsInput {
	this := UpdateLegalAccountDetailsInput{}
	return &this
}

// GetCompany returns the Company field value
func (o *UpdateLegalAccountDetailsInput) GetCompany() Company {
	if o == nil {
		var ret Company
		return ret
	}

	return o.Company
}

// GetCompanyOk returns a tuple with the Company field value
// and a boolean to check if the value has been set.
func (o *UpdateLegalAccountDetailsInput) GetCompanyOk() (*Company, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Company, true
}

// SetCompany sets field value
func (o *UpdateLegalAccountDetailsInput) SetCompany(v Company) {
	o.Company = v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *UpdateLegalAccountDetailsInput) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLegalAccountDetailsInput) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *UpdateLegalAccountDetailsInput) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *UpdateLegalAccountDetailsInput) SetEmail(v string) {
	o.Email = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *UpdateLegalAccountDetailsInput) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLegalAccountDetailsInput) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *UpdateLegalAccountDetailsInput) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *UpdateLegalAccountDetailsInput) SetTitle(v string) {
	o.Title = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *UpdateLegalAccountDetailsInput) GetFirstName() string {
	if o == nil || o.FirstName == nil {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLegalAccountDetailsInput) GetFirstNameOk() (*string, bool) {
	if o == nil || o.FirstName == nil {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *UpdateLegalAccountDetailsInput) HasFirstName() bool {
	if o != nil && o.FirstName != nil {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *UpdateLegalAccountDetailsInput) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *UpdateLegalAccountDetailsInput) GetLastName() string {
	if o == nil || o.LastName == nil {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLegalAccountDetailsInput) GetLastNameOk() (*string, bool) {
	if o == nil || o.LastName == nil {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *UpdateLegalAccountDetailsInput) HasLastName() bool {
	if o != nil && o.LastName != nil {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *UpdateLegalAccountDetailsInput) SetLastName(v string) {
	o.LastName = &v
}

// GetAdresse returns the Adresse field value if set, zero value otherwise.
func (o *UpdateLegalAccountDetailsInput) GetAdresse() Address {
	if o == nil || o.Adresse == nil {
		var ret Address
		return ret
	}
	return *o.Adresse
}

// GetAdresseOk returns a tuple with the Adresse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLegalAccountDetailsInput) GetAdresseOk() (*Address, bool) {
	if o == nil || o.Adresse == nil {
		return nil, false
	}
	return o.Adresse, true
}

// HasAdresse returns a boolean if a field has been set.
func (o *UpdateLegalAccountDetailsInput) HasAdresse() bool {
	if o != nil && o.Adresse != nil {
		return true
	}

	return false
}

// SetAdresse gets a reference to the given Address and assigns it to the Adresse field.
func (o *UpdateLegalAccountDetailsInput) SetAdresse(v Address) {
	o.Adresse = &v
}

// GetBirth returns the Birth field value if set, zero value otherwise.
func (o *UpdateLegalAccountDetailsInput) GetBirth() Birth {
	if o == nil || o.Birth == nil {
		var ret Birth
		return ret
	}
	return *o.Birth
}

// GetBirthOk returns a tuple with the Birth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLegalAccountDetailsInput) GetBirthOk() (*Birth, bool) {
	if o == nil || o.Birth == nil {
		return nil, false
	}
	return o.Birth, true
}

// HasBirth returns a boolean if a field has been set.
func (o *UpdateLegalAccountDetailsInput) HasBirth() bool {
	if o != nil && o.Birth != nil {
		return true
	}

	return false
}

// SetBirth gets a reference to the given Birth and assigns it to the Birth field.
func (o *UpdateLegalAccountDetailsInput) SetBirth(v Birth) {
	o.Birth = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *UpdateLegalAccountDetailsInput) GetPhoneNumber() string {
	if o == nil || o.PhoneNumber == nil {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLegalAccountDetailsInput) GetPhoneNumberOk() (*string, bool) {
	if o == nil || o.PhoneNumber == nil {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *UpdateLegalAccountDetailsInput) HasPhoneNumber() bool {
	if o != nil && o.PhoneNumber != nil {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *UpdateLegalAccountDetailsInput) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetMobileNumber returns the MobileNumber field value if set, zero value otherwise.
func (o *UpdateLegalAccountDetailsInput) GetMobileNumber() string {
	if o == nil || o.MobileNumber == nil {
		var ret string
		return ret
	}
	return *o.MobileNumber
}

// GetMobileNumberOk returns a tuple with the MobileNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLegalAccountDetailsInput) GetMobileNumberOk() (*string, bool) {
	if o == nil || o.MobileNumber == nil {
		return nil, false
	}
	return o.MobileNumber, true
}

// HasMobileNumber returns a boolean if a field has been set.
func (o *UpdateLegalAccountDetailsInput) HasMobileNumber() bool {
	if o != nil && o.MobileNumber != nil {
		return true
	}

	return false
}

// SetMobileNumber gets a reference to the given string and assigns it to the MobileNumber field.
func (o *UpdateLegalAccountDetailsInput) SetMobileNumber(v string) {
	o.MobileNumber = &v
}

// GetIsDebtor returns the IsDebtor field value if set, zero value otherwise.
func (o *UpdateLegalAccountDetailsInput) GetIsDebtor() bool {
	if o == nil || o.IsDebtor == nil {
		var ret bool
		return ret
	}
	return *o.IsDebtor
}

// GetIsDebtorOk returns a tuple with the IsDebtor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLegalAccountDetailsInput) GetIsDebtorOk() (*bool, bool) {
	if o == nil || o.IsDebtor == nil {
		return nil, false
	}
	return o.IsDebtor, true
}

// HasIsDebtor returns a boolean if a field has been set.
func (o *UpdateLegalAccountDetailsInput) HasIsDebtor() bool {
	if o != nil && o.IsDebtor != nil {
		return true
	}

	return false
}

// SetIsDebtor gets a reference to the given bool and assigns it to the IsDebtor field.
func (o *UpdateLegalAccountDetailsInput) SetIsDebtor(v bool) {
	o.IsDebtor = &v
}

// GetNationality returns the Nationality field value if set, zero value otherwise.
func (o *UpdateLegalAccountDetailsInput) GetNationality() string {
	if o == nil || o.Nationality == nil {
		var ret string
		return ret
	}
	return *o.Nationality
}

// GetNationalityOk returns a tuple with the Nationality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLegalAccountDetailsInput) GetNationalityOk() (*string, bool) {
	if o == nil || o.Nationality == nil {
		return nil, false
	}
	return o.Nationality, true
}

// HasNationality returns a boolean if a field has been set.
func (o *UpdateLegalAccountDetailsInput) HasNationality() bool {
	if o != nil && o.Nationality != nil {
		return true
	}

	return false
}

// SetNationality gets a reference to the given string and assigns it to the Nationality field.
func (o *UpdateLegalAccountDetailsInput) SetNationality(v string) {
	o.Nationality = &v
}

// GetPayerOrBeneficiary returns the PayerOrBeneficiary field value if set, zero value otherwise.
func (o *UpdateLegalAccountDetailsInput) GetPayerOrBeneficiary() int32 {
	if o == nil || o.PayerOrBeneficiary == nil {
		var ret int32
		return ret
	}
	return *o.PayerOrBeneficiary
}

// GetPayerOrBeneficiaryOk returns a tuple with the PayerOrBeneficiary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLegalAccountDetailsInput) GetPayerOrBeneficiaryOk() (*int32, bool) {
	if o == nil || o.PayerOrBeneficiary == nil {
		return nil, false
	}
	return o.PayerOrBeneficiary, true
}

// HasPayerOrBeneficiary returns a boolean if a field has been set.
func (o *UpdateLegalAccountDetailsInput) HasPayerOrBeneficiary() bool {
	if o != nil && o.PayerOrBeneficiary != nil {
		return true
	}

	return false
}

// SetPayerOrBeneficiary gets a reference to the given int32 and assigns it to the PayerOrBeneficiary field.
func (o *UpdateLegalAccountDetailsInput) SetPayerOrBeneficiary(v int32) {
	o.PayerOrBeneficiary = &v
}

// GetIsCompany returns the IsCompany field value if set, zero value otherwise.
func (o *UpdateLegalAccountDetailsInput) GetIsCompany() bool {
	if o == nil || o.IsCompany == nil {
		var ret bool
		return ret
	}
	return *o.IsCompany
}

// GetIsCompanyOk returns a tuple with the IsCompany field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLegalAccountDetailsInput) GetIsCompanyOk() (*bool, bool) {
	if o == nil || o.IsCompany == nil {
		return nil, false
	}
	return o.IsCompany, true
}

// HasIsCompany returns a boolean if a field has been set.
func (o *UpdateLegalAccountDetailsInput) HasIsCompany() bool {
	if o != nil && o.IsCompany != nil {
		return true
	}

	return false
}

// SetIsCompany gets a reference to the given bool and assigns it to the IsCompany field.
func (o *UpdateLegalAccountDetailsInput) SetIsCompany(v bool) {
	o.IsCompany = &v
}

func (o UpdateLegalAccountDetailsInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["company"] = o.Company
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if o.FirstName != nil {
		toSerialize["firstName"] = o.FirstName
	}
	if o.LastName != nil {
		toSerialize["lastName"] = o.LastName
	}
	if o.Adresse != nil {
		toSerialize["adresse"] = o.Adresse
	}
	if o.Birth != nil {
		toSerialize["Birth"] = o.Birth
	}
	if o.PhoneNumber != nil {
		toSerialize["phoneNumber"] = o.PhoneNumber
	}
	if o.MobileNumber != nil {
		toSerialize["mobileNumber"] = o.MobileNumber
	}
	if o.IsDebtor != nil {
		toSerialize["isDebtor"] = o.IsDebtor
	}
	if o.Nationality != nil {
		toSerialize["nationality"] = o.Nationality
	}
	if o.PayerOrBeneficiary != nil {
		toSerialize["payerOrBeneficiary"] = o.PayerOrBeneficiary
	}
	if o.IsCompany != nil {
		toSerialize["isCompany"] = o.IsCompany
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateLegalAccountDetailsInput struct {
	value *UpdateLegalAccountDetailsInput
	isSet bool
}

func (v NullableUpdateLegalAccountDetailsInput) Get() *UpdateLegalAccountDetailsInput {
	return v.value
}

func (v *NullableUpdateLegalAccountDetailsInput) Set(val *UpdateLegalAccountDetailsInput) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateLegalAccountDetailsInput) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateLegalAccountDetailsInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateLegalAccountDetailsInput(val *UpdateLegalAccountDetailsInput) *NullableUpdateLegalAccountDetailsInput {
	return &NullableUpdateLegalAccountDetailsInput{value: val, isSet: true}
}

func (v NullableUpdateLegalAccountDetailsInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateLegalAccountDetailsInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


