/*
Lemonway DirectKit API 2.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CreateBnplPaymentOutput struct for CreateBnplPaymentOutput
type CreateBnplPaymentOutput struct {
	// Transaction ID.
	Id *int64 `json:"id,omitempty"`
	// Payment page URL.
	RedirectUrl *string `json:"redirectUrl,omitempty"`
	Error *Error `json:"error,omitempty"`
}

// NewCreateBnplPaymentOutput instantiates a new CreateBnplPaymentOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateBnplPaymentOutput() *CreateBnplPaymentOutput {
	this := CreateBnplPaymentOutput{}
	return &this
}

// NewCreateBnplPaymentOutputWithDefaults instantiates a new CreateBnplPaymentOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateBnplPaymentOutputWithDefaults() *CreateBnplPaymentOutput {
	this := CreateBnplPaymentOutput{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CreateBnplPaymentOutput) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBnplPaymentOutput) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CreateBnplPaymentOutput) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *CreateBnplPaymentOutput) SetId(v int64) {
	o.Id = &v
}

// GetRedirectUrl returns the RedirectUrl field value if set, zero value otherwise.
func (o *CreateBnplPaymentOutput) GetRedirectUrl() string {
	if o == nil || o.RedirectUrl == nil {
		var ret string
		return ret
	}
	return *o.RedirectUrl
}

// GetRedirectUrlOk returns a tuple with the RedirectUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBnplPaymentOutput) GetRedirectUrlOk() (*string, bool) {
	if o == nil || o.RedirectUrl == nil {
		return nil, false
	}
	return o.RedirectUrl, true
}

// HasRedirectUrl returns a boolean if a field has been set.
func (o *CreateBnplPaymentOutput) HasRedirectUrl() bool {
	if o != nil && o.RedirectUrl != nil {
		return true
	}

	return false
}

// SetRedirectUrl gets a reference to the given string and assigns it to the RedirectUrl field.
func (o *CreateBnplPaymentOutput) SetRedirectUrl(v string) {
	o.RedirectUrl = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *CreateBnplPaymentOutput) GetError() Error {
	if o == nil || o.Error == nil {
		var ret Error
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBnplPaymentOutput) GetErrorOk() (*Error, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *CreateBnplPaymentOutput) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given Error and assigns it to the Error field.
func (o *CreateBnplPaymentOutput) SetError(v Error) {
	o.Error = &v
}

func (o CreateBnplPaymentOutput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.RedirectUrl != nil {
		toSerialize["redirectUrl"] = o.RedirectUrl
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullableCreateBnplPaymentOutput struct {
	value *CreateBnplPaymentOutput
	isSet bool
}

func (v NullableCreateBnplPaymentOutput) Get() *CreateBnplPaymentOutput {
	return v.value
}

func (v *NullableCreateBnplPaymentOutput) Set(val *CreateBnplPaymentOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateBnplPaymentOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateBnplPaymentOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateBnplPaymentOutput(val *CreateBnplPaymentOutput) *NullableCreateBnplPaymentOutput {
	return &NullableCreateBnplPaymentOutput{value: val, isSet: true}
}

func (v NullableCreateBnplPaymentOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateBnplPaymentOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


