/*
Lemonway DirectKit API 2.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MoneyIn3DConfirmInput struct for MoneyIn3DConfirmInput
type MoneyIn3DConfirmInput struct {
	// **Mercanet only**  Indicates if the request is delayed and will require validation.  1. If true, payment will only be pre-authorized, you will have to call the `MoneyInValidate` method within 6 days or [delayedDays] in order to request the debit card.  2. If empty, the default behavior is no delay and no validation is necessary (unless stated otherwise in your contract).  3. If false, the card will be debited without delay and without validation necessary.
	IsPreAuth *bool `json:"isPreAuth,omitempty"`
	// **Mercanet only**  If `isPreAuth` is not true, this will be ignored.   Please use with caution, if delayedDays &gt; 6, it is possible that the payment will be denied when you try to validate it, because a new authorization will be made.
	DelayedDays *int32 `json:"delayedDays,omitempty"`
	Card *CardInfo `json:"card,omitempty"`
	// MD Data Returned by 3-D Secure Site
	Md *string `json:"md,omitempty"`
	// Pares Data Returned by 3-D Secure Authentication Website
	Pares *string `json:"pares,omitempty"`
	// Leave Empty
	SpecialConfig *string `json:"specialConfig,omitempty"`
}

// NewMoneyIn3DConfirmInput instantiates a new MoneyIn3DConfirmInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMoneyIn3DConfirmInput() *MoneyIn3DConfirmInput {
	this := MoneyIn3DConfirmInput{}
	return &this
}

// NewMoneyIn3DConfirmInputWithDefaults instantiates a new MoneyIn3DConfirmInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMoneyIn3DConfirmInputWithDefaults() *MoneyIn3DConfirmInput {
	this := MoneyIn3DConfirmInput{}
	return &this
}

// GetIsPreAuth returns the IsPreAuth field value if set, zero value otherwise.
func (o *MoneyIn3DConfirmInput) GetIsPreAuth() bool {
	if o == nil || o.IsPreAuth == nil {
		var ret bool
		return ret
	}
	return *o.IsPreAuth
}

// GetIsPreAuthOk returns a tuple with the IsPreAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoneyIn3DConfirmInput) GetIsPreAuthOk() (*bool, bool) {
	if o == nil || o.IsPreAuth == nil {
		return nil, false
	}
	return o.IsPreAuth, true
}

// HasIsPreAuth returns a boolean if a field has been set.
func (o *MoneyIn3DConfirmInput) HasIsPreAuth() bool {
	if o != nil && o.IsPreAuth != nil {
		return true
	}

	return false
}

// SetIsPreAuth gets a reference to the given bool and assigns it to the IsPreAuth field.
func (o *MoneyIn3DConfirmInput) SetIsPreAuth(v bool) {
	o.IsPreAuth = &v
}

// GetDelayedDays returns the DelayedDays field value if set, zero value otherwise.
func (o *MoneyIn3DConfirmInput) GetDelayedDays() int32 {
	if o == nil || o.DelayedDays == nil {
		var ret int32
		return ret
	}
	return *o.DelayedDays
}

// GetDelayedDaysOk returns a tuple with the DelayedDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoneyIn3DConfirmInput) GetDelayedDaysOk() (*int32, bool) {
	if o == nil || o.DelayedDays == nil {
		return nil, false
	}
	return o.DelayedDays, true
}

// HasDelayedDays returns a boolean if a field has been set.
func (o *MoneyIn3DConfirmInput) HasDelayedDays() bool {
	if o != nil && o.DelayedDays != nil {
		return true
	}

	return false
}

// SetDelayedDays gets a reference to the given int32 and assigns it to the DelayedDays field.
func (o *MoneyIn3DConfirmInput) SetDelayedDays(v int32) {
	o.DelayedDays = &v
}

// GetCard returns the Card field value if set, zero value otherwise.
func (o *MoneyIn3DConfirmInput) GetCard() CardInfo {
	if o == nil || o.Card == nil {
		var ret CardInfo
		return ret
	}
	return *o.Card
}

// GetCardOk returns a tuple with the Card field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoneyIn3DConfirmInput) GetCardOk() (*CardInfo, bool) {
	if o == nil || o.Card == nil {
		return nil, false
	}
	return o.Card, true
}

// HasCard returns a boolean if a field has been set.
func (o *MoneyIn3DConfirmInput) HasCard() bool {
	if o != nil && o.Card != nil {
		return true
	}

	return false
}

// SetCard gets a reference to the given CardInfo and assigns it to the Card field.
func (o *MoneyIn3DConfirmInput) SetCard(v CardInfo) {
	o.Card = &v
}

// GetMd returns the Md field value if set, zero value otherwise.
func (o *MoneyIn3DConfirmInput) GetMd() string {
	if o == nil || o.Md == nil {
		var ret string
		return ret
	}
	return *o.Md
}

// GetMdOk returns a tuple with the Md field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoneyIn3DConfirmInput) GetMdOk() (*string, bool) {
	if o == nil || o.Md == nil {
		return nil, false
	}
	return o.Md, true
}

// HasMd returns a boolean if a field has been set.
func (o *MoneyIn3DConfirmInput) HasMd() bool {
	if o != nil && o.Md != nil {
		return true
	}

	return false
}

// SetMd gets a reference to the given string and assigns it to the Md field.
func (o *MoneyIn3DConfirmInput) SetMd(v string) {
	o.Md = &v
}

// GetPares returns the Pares field value if set, zero value otherwise.
func (o *MoneyIn3DConfirmInput) GetPares() string {
	if o == nil || o.Pares == nil {
		var ret string
		return ret
	}
	return *o.Pares
}

// GetParesOk returns a tuple with the Pares field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoneyIn3DConfirmInput) GetParesOk() (*string, bool) {
	if o == nil || o.Pares == nil {
		return nil, false
	}
	return o.Pares, true
}

// HasPares returns a boolean if a field has been set.
func (o *MoneyIn3DConfirmInput) HasPares() bool {
	if o != nil && o.Pares != nil {
		return true
	}

	return false
}

// SetPares gets a reference to the given string and assigns it to the Pares field.
func (o *MoneyIn3DConfirmInput) SetPares(v string) {
	o.Pares = &v
}

// GetSpecialConfig returns the SpecialConfig field value if set, zero value otherwise.
func (o *MoneyIn3DConfirmInput) GetSpecialConfig() string {
	if o == nil || o.SpecialConfig == nil {
		var ret string
		return ret
	}
	return *o.SpecialConfig
}

// GetSpecialConfigOk returns a tuple with the SpecialConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoneyIn3DConfirmInput) GetSpecialConfigOk() (*string, bool) {
	if o == nil || o.SpecialConfig == nil {
		return nil, false
	}
	return o.SpecialConfig, true
}

// HasSpecialConfig returns a boolean if a field has been set.
func (o *MoneyIn3DConfirmInput) HasSpecialConfig() bool {
	if o != nil && o.SpecialConfig != nil {
		return true
	}

	return false
}

// SetSpecialConfig gets a reference to the given string and assigns it to the SpecialConfig field.
func (o *MoneyIn3DConfirmInput) SetSpecialConfig(v string) {
	o.SpecialConfig = &v
}

func (o MoneyIn3DConfirmInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IsPreAuth != nil {
		toSerialize["isPreAuth"] = o.IsPreAuth
	}
	if o.DelayedDays != nil {
		toSerialize["delayedDays"] = o.DelayedDays
	}
	if o.Card != nil {
		toSerialize["card"] = o.Card
	}
	if o.Md != nil {
		toSerialize["md"] = o.Md
	}
	if o.Pares != nil {
		toSerialize["pares"] = o.Pares
	}
	if o.SpecialConfig != nil {
		toSerialize["specialConfig"] = o.SpecialConfig
	}
	return json.Marshal(toSerialize)
}

type NullableMoneyIn3DConfirmInput struct {
	value *MoneyIn3DConfirmInput
	isSet bool
}

func (v NullableMoneyIn3DConfirmInput) Get() *MoneyIn3DConfirmInput {
	return v.value
}

func (v *NullableMoneyIn3DConfirmInput) Set(val *MoneyIn3DConfirmInput) {
	v.value = val
	v.isSet = true
}

func (v NullableMoneyIn3DConfirmInput) IsSet() bool {
	return v.isSet
}

func (v *NullableMoneyIn3DConfirmInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMoneyIn3DConfirmInput(val *MoneyIn3DConfirmInput) *NullableMoneyIn3DConfirmInput {
	return &NullableMoneyIn3DConfirmInput{value: val, isSet: true}
}

func (v NullableMoneyIn3DConfirmInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMoneyIn3DConfirmInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


