/*
Lemonway DirectKit API 2.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IndividualAccount struct for IndividualAccount
type IndividualAccount struct {
	// Payment Account ID
	Id *string `json:"id,omitempty"`
	// Internal ID given by Lemonway (ID displayed on the Lemonway Dashboard)
	InternalId *int64 `json:"internalId,omitempty"`
	Limits *Limits `json:"limits,omitempty"`
}

// NewIndividualAccount instantiates a new IndividualAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIndividualAccount() *IndividualAccount {
	this := IndividualAccount{}
	return &this
}

// NewIndividualAccountWithDefaults instantiates a new IndividualAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIndividualAccountWithDefaults() *IndividualAccount {
	this := IndividualAccount{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IndividualAccount) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndividualAccount) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IndividualAccount) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *IndividualAccount) SetId(v string) {
	o.Id = &v
}

// GetInternalId returns the InternalId field value if set, zero value otherwise.
func (o *IndividualAccount) GetInternalId() int64 {
	if o == nil || o.InternalId == nil {
		var ret int64
		return ret
	}
	return *o.InternalId
}

// GetInternalIdOk returns a tuple with the InternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndividualAccount) GetInternalIdOk() (*int64, bool) {
	if o == nil || o.InternalId == nil {
		return nil, false
	}
	return o.InternalId, true
}

// HasInternalId returns a boolean if a field has been set.
func (o *IndividualAccount) HasInternalId() bool {
	if o != nil && o.InternalId != nil {
		return true
	}

	return false
}

// SetInternalId gets a reference to the given int64 and assigns it to the InternalId field.
func (o *IndividualAccount) SetInternalId(v int64) {
	o.InternalId = &v
}

// GetLimits returns the Limits field value if set, zero value otherwise.
func (o *IndividualAccount) GetLimits() Limits {
	if o == nil || o.Limits == nil {
		var ret Limits
		return ret
	}
	return *o.Limits
}

// GetLimitsOk returns a tuple with the Limits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndividualAccount) GetLimitsOk() (*Limits, bool) {
	if o == nil || o.Limits == nil {
		return nil, false
	}
	return o.Limits, true
}

// HasLimits returns a boolean if a field has been set.
func (o *IndividualAccount) HasLimits() bool {
	if o != nil && o.Limits != nil {
		return true
	}

	return false
}

// SetLimits gets a reference to the given Limits and assigns it to the Limits field.
func (o *IndividualAccount) SetLimits(v Limits) {
	o.Limits = &v
}

func (o IndividualAccount) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.InternalId != nil {
		toSerialize["internalId"] = o.InternalId
	}
	if o.Limits != nil {
		toSerialize["limits"] = o.Limits
	}
	return json.Marshal(toSerialize)
}

type NullableIndividualAccount struct {
	value *IndividualAccount
	isSet bool
}

func (v NullableIndividualAccount) Get() *IndividualAccount {
	return v.value
}

func (v *NullableIndividualAccount) Set(val *IndividualAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableIndividualAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableIndividualAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIndividualAccount(val *IndividualAccount) *NullableIndividualAccount {
	return &NullableIndividualAccount{value: val, isSet: true}
}

func (v NullableIndividualAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIndividualAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


