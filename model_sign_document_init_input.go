/*
Lemonway DirectKit API 2.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SignDocumentInitInput struct for SignDocumentInitInput
type SignDocumentInitInput struct {
	// Required if no mobile number is already assigned to the payment account (using RegisterWallet or UpdateWalletDetails).  Format must be MSISDN : international number with country code, without \"+\" and \"00\".
	MobileNumber *string `json:"mobileNumber,omitempty"`
	// Use **21** for SDD mandate
	Type int32 `json:"type"`
	// Your website will the return URL, called by WEBKIT to terminate the operation.
	ReturnUrl string `json:"returnUrl"`
	// You site will return the URL, called by WEBKIT in case of an error.
	ErrorUrl string `json:"errorUrl"`
}

// NewSignDocumentInitInput instantiates a new SignDocumentInitInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSignDocumentInitInput(type_ int32, returnUrl string, errorUrl string) *SignDocumentInitInput {
	this := SignDocumentInitInput{}
	this.Type = type_
	this.ReturnUrl = returnUrl
	this.ErrorUrl = errorUrl
	return &this
}

// NewSignDocumentInitInputWithDefaults instantiates a new SignDocumentInitInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSignDocumentInitInputWithDefaults() *SignDocumentInitInput {
	this := SignDocumentInitInput{}
	return &this
}

// GetMobileNumber returns the MobileNumber field value if set, zero value otherwise.
func (o *SignDocumentInitInput) GetMobileNumber() string {
	if o == nil || o.MobileNumber == nil {
		var ret string
		return ret
	}
	return *o.MobileNumber
}

// GetMobileNumberOk returns a tuple with the MobileNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignDocumentInitInput) GetMobileNumberOk() (*string, bool) {
	if o == nil || o.MobileNumber == nil {
		return nil, false
	}
	return o.MobileNumber, true
}

// HasMobileNumber returns a boolean if a field has been set.
func (o *SignDocumentInitInput) HasMobileNumber() bool {
	if o != nil && o.MobileNumber != nil {
		return true
	}

	return false
}

// SetMobileNumber gets a reference to the given string and assigns it to the MobileNumber field.
func (o *SignDocumentInitInput) SetMobileNumber(v string) {
	o.MobileNumber = &v
}

// GetType returns the Type field value
func (o *SignDocumentInitInput) GetType() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *SignDocumentInitInput) GetTypeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *SignDocumentInitInput) SetType(v int32) {
	o.Type = v
}

// GetReturnUrl returns the ReturnUrl field value
func (o *SignDocumentInitInput) GetReturnUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReturnUrl
}

// GetReturnUrlOk returns a tuple with the ReturnUrl field value
// and a boolean to check if the value has been set.
func (o *SignDocumentInitInput) GetReturnUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReturnUrl, true
}

// SetReturnUrl sets field value
func (o *SignDocumentInitInput) SetReturnUrl(v string) {
	o.ReturnUrl = v
}

// GetErrorUrl returns the ErrorUrl field value
func (o *SignDocumentInitInput) GetErrorUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ErrorUrl
}

// GetErrorUrlOk returns a tuple with the ErrorUrl field value
// and a boolean to check if the value has been set.
func (o *SignDocumentInitInput) GetErrorUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ErrorUrl, true
}

// SetErrorUrl sets field value
func (o *SignDocumentInitInput) SetErrorUrl(v string) {
	o.ErrorUrl = v
}

func (o SignDocumentInitInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MobileNumber != nil {
		toSerialize["mobileNumber"] = o.MobileNumber
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["returnUrl"] = o.ReturnUrl
	}
	if true {
		toSerialize["errorUrl"] = o.ErrorUrl
	}
	return json.Marshal(toSerialize)
}

type NullableSignDocumentInitInput struct {
	value *SignDocumentInitInput
	isSet bool
}

func (v NullableSignDocumentInitInput) Get() *SignDocumentInitInput {
	return v.value
}

func (v *NullableSignDocumentInitInput) Set(val *SignDocumentInitInput) {
	v.value = val
	v.isSet = true
}

func (v NullableSignDocumentInitInput) IsSet() bool {
	return v.isSet
}

func (v *NullableSignDocumentInitInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSignDocumentInitInput(val *SignDocumentInitInput) *NullableSignDocumentInitInput {
	return &NullableSignDocumentInitInput{value: val, isSet: true}
}

func (v NullableSignDocumentInitInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSignDocumentInitInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


