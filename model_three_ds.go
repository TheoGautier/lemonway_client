/*
Lemonway DirectKit API 2.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ThreeDs struct for ThreeDs
type ThreeDs struct {
	// 3DS Exemption Request    Possible value:      NO_PREFERENCE: The issuing Bank can choose to activate or not 3DS v2.
	ThreeDSModeRequested *string `json:"threeDSModeRequested,omitempty"`
	// 3DS Authentication Result    Possible values:      - CHALLENGE: 3DS v2 was activated and the card owner was asked to be strongly authenticated.    - FRICTIONLESS: 3DS v2 was not activated.    - NONE: We could not get the SCA result.
	ThreeDSResult *string `json:"threeDSResult,omitempty"`
}

// NewThreeDs instantiates a new ThreeDs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewThreeDs() *ThreeDs {
	this := ThreeDs{}
	return &this
}

// NewThreeDsWithDefaults instantiates a new ThreeDs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewThreeDsWithDefaults() *ThreeDs {
	this := ThreeDs{}
	return &this
}

// GetThreeDSModeRequested returns the ThreeDSModeRequested field value if set, zero value otherwise.
func (o *ThreeDs) GetThreeDSModeRequested() string {
	if o == nil || o.ThreeDSModeRequested == nil {
		var ret string
		return ret
	}
	return *o.ThreeDSModeRequested
}

// GetThreeDSModeRequestedOk returns a tuple with the ThreeDSModeRequested field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreeDs) GetThreeDSModeRequestedOk() (*string, bool) {
	if o == nil || o.ThreeDSModeRequested == nil {
		return nil, false
	}
	return o.ThreeDSModeRequested, true
}

// HasThreeDSModeRequested returns a boolean if a field has been set.
func (o *ThreeDs) HasThreeDSModeRequested() bool {
	if o != nil && o.ThreeDSModeRequested != nil {
		return true
	}

	return false
}

// SetThreeDSModeRequested gets a reference to the given string and assigns it to the ThreeDSModeRequested field.
func (o *ThreeDs) SetThreeDSModeRequested(v string) {
	o.ThreeDSModeRequested = &v
}

// GetThreeDSResult returns the ThreeDSResult field value if set, zero value otherwise.
func (o *ThreeDs) GetThreeDSResult() string {
	if o == nil || o.ThreeDSResult == nil {
		var ret string
		return ret
	}
	return *o.ThreeDSResult
}

// GetThreeDSResultOk returns a tuple with the ThreeDSResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreeDs) GetThreeDSResultOk() (*string, bool) {
	if o == nil || o.ThreeDSResult == nil {
		return nil, false
	}
	return o.ThreeDSResult, true
}

// HasThreeDSResult returns a boolean if a field has been set.
func (o *ThreeDs) HasThreeDSResult() bool {
	if o != nil && o.ThreeDSResult != nil {
		return true
	}

	return false
}

// SetThreeDSResult gets a reference to the given string and assigns it to the ThreeDSResult field.
func (o *ThreeDs) SetThreeDSResult(v string) {
	o.ThreeDSResult = &v
}

func (o ThreeDs) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ThreeDSModeRequested != nil {
		toSerialize["threeDSModeRequested"] = o.ThreeDSModeRequested
	}
	if o.ThreeDSResult != nil {
		toSerialize["threeDSResult"] = o.ThreeDSResult
	}
	return json.Marshal(toSerialize)
}

type NullableThreeDs struct {
	value *ThreeDs
	isSet bool
}

func (v NullableThreeDs) Get() *ThreeDs {
	return v.value
}

func (v *NullableThreeDs) Set(val *ThreeDs) {
	v.value = val
	v.isSet = true
}

func (v NullableThreeDs) IsSet() bool {
	return v.isSet
}

func (v *NullableThreeDs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableThreeDs(val *ThreeDs) *NullableThreeDs {
	return &NullableThreeDs{value: val, isSet: true}
}

func (v NullableThreeDs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableThreeDs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


