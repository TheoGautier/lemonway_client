/*
Lemonway DirectKit API 2.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CreateIBANOutput struct for CreateIBANOutput
type CreateIBANOutput struct {
	// IBAN ID
	Id *int64 `json:"id,omitempty"`
	// IBAN
	Iban *string `json:"iban,omitempty"`
	// BIC/SWIFT Code
	Bic *string `json:"bic,omitempty"`
	// IBAN Owner: First Name, Last Name, or Enterprise Name
	Holder *string `json:"holder,omitempty"`
	// Domiciliation
	Domiciliation *string `json:"domiciliation,omitempty"`
	// IBAN Status
	Status *int32 `json:"status,omitempty"`
	// IBAN left that can be generated for this wallet
	MaxAvailableIbanPerWallet *int32 `json:"maxAvailableIbanPerWallet,omitempty"`
	// IBAN left that can be generated in total
	MaxAvailableIban *int32 `json:"maxAvailableIban,omitempty"`
	// PDF in base64
	Pdf *string `json:"pdf,omitempty"`
	// QR Code PNG in base64
	QrCode *string `json:"qrCode,omitempty"`
	Error *Error `json:"error,omitempty"`
}

// NewCreateIBANOutput instantiates a new CreateIBANOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateIBANOutput() *CreateIBANOutput {
	this := CreateIBANOutput{}
	return &this
}

// NewCreateIBANOutputWithDefaults instantiates a new CreateIBANOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateIBANOutputWithDefaults() *CreateIBANOutput {
	this := CreateIBANOutput{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CreateIBANOutput) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIBANOutput) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CreateIBANOutput) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *CreateIBANOutput) SetId(v int64) {
	o.Id = &v
}

// GetIban returns the Iban field value if set, zero value otherwise.
func (o *CreateIBANOutput) GetIban() string {
	if o == nil || o.Iban == nil {
		var ret string
		return ret
	}
	return *o.Iban
}

// GetIbanOk returns a tuple with the Iban field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIBANOutput) GetIbanOk() (*string, bool) {
	if o == nil || o.Iban == nil {
		return nil, false
	}
	return o.Iban, true
}

// HasIban returns a boolean if a field has been set.
func (o *CreateIBANOutput) HasIban() bool {
	if o != nil && o.Iban != nil {
		return true
	}

	return false
}

// SetIban gets a reference to the given string and assigns it to the Iban field.
func (o *CreateIBANOutput) SetIban(v string) {
	o.Iban = &v
}

// GetBic returns the Bic field value if set, zero value otherwise.
func (o *CreateIBANOutput) GetBic() string {
	if o == nil || o.Bic == nil {
		var ret string
		return ret
	}
	return *o.Bic
}

// GetBicOk returns a tuple with the Bic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIBANOutput) GetBicOk() (*string, bool) {
	if o == nil || o.Bic == nil {
		return nil, false
	}
	return o.Bic, true
}

// HasBic returns a boolean if a field has been set.
func (o *CreateIBANOutput) HasBic() bool {
	if o != nil && o.Bic != nil {
		return true
	}

	return false
}

// SetBic gets a reference to the given string and assigns it to the Bic field.
func (o *CreateIBANOutput) SetBic(v string) {
	o.Bic = &v
}

// GetHolder returns the Holder field value if set, zero value otherwise.
func (o *CreateIBANOutput) GetHolder() string {
	if o == nil || o.Holder == nil {
		var ret string
		return ret
	}
	return *o.Holder
}

// GetHolderOk returns a tuple with the Holder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIBANOutput) GetHolderOk() (*string, bool) {
	if o == nil || o.Holder == nil {
		return nil, false
	}
	return o.Holder, true
}

// HasHolder returns a boolean if a field has been set.
func (o *CreateIBANOutput) HasHolder() bool {
	if o != nil && o.Holder != nil {
		return true
	}

	return false
}

// SetHolder gets a reference to the given string and assigns it to the Holder field.
func (o *CreateIBANOutput) SetHolder(v string) {
	o.Holder = &v
}

// GetDomiciliation returns the Domiciliation field value if set, zero value otherwise.
func (o *CreateIBANOutput) GetDomiciliation() string {
	if o == nil || o.Domiciliation == nil {
		var ret string
		return ret
	}
	return *o.Domiciliation
}

// GetDomiciliationOk returns a tuple with the Domiciliation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIBANOutput) GetDomiciliationOk() (*string, bool) {
	if o == nil || o.Domiciliation == nil {
		return nil, false
	}
	return o.Domiciliation, true
}

// HasDomiciliation returns a boolean if a field has been set.
func (o *CreateIBANOutput) HasDomiciliation() bool {
	if o != nil && o.Domiciliation != nil {
		return true
	}

	return false
}

// SetDomiciliation gets a reference to the given string and assigns it to the Domiciliation field.
func (o *CreateIBANOutput) SetDomiciliation(v string) {
	o.Domiciliation = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CreateIBANOutput) GetStatus() int32 {
	if o == nil || o.Status == nil {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIBANOutput) GetStatusOk() (*int32, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CreateIBANOutput) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *CreateIBANOutput) SetStatus(v int32) {
	o.Status = &v
}

// GetMaxAvailableIbanPerWallet returns the MaxAvailableIbanPerWallet field value if set, zero value otherwise.
func (o *CreateIBANOutput) GetMaxAvailableIbanPerWallet() int32 {
	if o == nil || o.MaxAvailableIbanPerWallet == nil {
		var ret int32
		return ret
	}
	return *o.MaxAvailableIbanPerWallet
}

// GetMaxAvailableIbanPerWalletOk returns a tuple with the MaxAvailableIbanPerWallet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIBANOutput) GetMaxAvailableIbanPerWalletOk() (*int32, bool) {
	if o == nil || o.MaxAvailableIbanPerWallet == nil {
		return nil, false
	}
	return o.MaxAvailableIbanPerWallet, true
}

// HasMaxAvailableIbanPerWallet returns a boolean if a field has been set.
func (o *CreateIBANOutput) HasMaxAvailableIbanPerWallet() bool {
	if o != nil && o.MaxAvailableIbanPerWallet != nil {
		return true
	}

	return false
}

// SetMaxAvailableIbanPerWallet gets a reference to the given int32 and assigns it to the MaxAvailableIbanPerWallet field.
func (o *CreateIBANOutput) SetMaxAvailableIbanPerWallet(v int32) {
	o.MaxAvailableIbanPerWallet = &v
}

// GetMaxAvailableIban returns the MaxAvailableIban field value if set, zero value otherwise.
func (o *CreateIBANOutput) GetMaxAvailableIban() int32 {
	if o == nil || o.MaxAvailableIban == nil {
		var ret int32
		return ret
	}
	return *o.MaxAvailableIban
}

// GetMaxAvailableIbanOk returns a tuple with the MaxAvailableIban field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIBANOutput) GetMaxAvailableIbanOk() (*int32, bool) {
	if o == nil || o.MaxAvailableIban == nil {
		return nil, false
	}
	return o.MaxAvailableIban, true
}

// HasMaxAvailableIban returns a boolean if a field has been set.
func (o *CreateIBANOutput) HasMaxAvailableIban() bool {
	if o != nil && o.MaxAvailableIban != nil {
		return true
	}

	return false
}

// SetMaxAvailableIban gets a reference to the given int32 and assigns it to the MaxAvailableIban field.
func (o *CreateIBANOutput) SetMaxAvailableIban(v int32) {
	o.MaxAvailableIban = &v
}

// GetPdf returns the Pdf field value if set, zero value otherwise.
func (o *CreateIBANOutput) GetPdf() string {
	if o == nil || o.Pdf == nil {
		var ret string
		return ret
	}
	return *o.Pdf
}

// GetPdfOk returns a tuple with the Pdf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIBANOutput) GetPdfOk() (*string, bool) {
	if o == nil || o.Pdf == nil {
		return nil, false
	}
	return o.Pdf, true
}

// HasPdf returns a boolean if a field has been set.
func (o *CreateIBANOutput) HasPdf() bool {
	if o != nil && o.Pdf != nil {
		return true
	}

	return false
}

// SetPdf gets a reference to the given string and assigns it to the Pdf field.
func (o *CreateIBANOutput) SetPdf(v string) {
	o.Pdf = &v
}

// GetQrCode returns the QrCode field value if set, zero value otherwise.
func (o *CreateIBANOutput) GetQrCode() string {
	if o == nil || o.QrCode == nil {
		var ret string
		return ret
	}
	return *o.QrCode
}

// GetQrCodeOk returns a tuple with the QrCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIBANOutput) GetQrCodeOk() (*string, bool) {
	if o == nil || o.QrCode == nil {
		return nil, false
	}
	return o.QrCode, true
}

// HasQrCode returns a boolean if a field has been set.
func (o *CreateIBANOutput) HasQrCode() bool {
	if o != nil && o.QrCode != nil {
		return true
	}

	return false
}

// SetQrCode gets a reference to the given string and assigns it to the QrCode field.
func (o *CreateIBANOutput) SetQrCode(v string) {
	o.QrCode = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *CreateIBANOutput) GetError() Error {
	if o == nil || o.Error == nil {
		var ret Error
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIBANOutput) GetErrorOk() (*Error, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *CreateIBANOutput) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given Error and assigns it to the Error field.
func (o *CreateIBANOutput) SetError(v Error) {
	o.Error = &v
}

func (o CreateIBANOutput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Iban != nil {
		toSerialize["iban"] = o.Iban
	}
	if o.Bic != nil {
		toSerialize["bic"] = o.Bic
	}
	if o.Holder != nil {
		toSerialize["holder"] = o.Holder
	}
	if o.Domiciliation != nil {
		toSerialize["domiciliation"] = o.Domiciliation
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.MaxAvailableIbanPerWallet != nil {
		toSerialize["maxAvailableIbanPerWallet"] = o.MaxAvailableIbanPerWallet
	}
	if o.MaxAvailableIban != nil {
		toSerialize["maxAvailableIban"] = o.MaxAvailableIban
	}
	if o.Pdf != nil {
		toSerialize["pdf"] = o.Pdf
	}
	if o.QrCode != nil {
		toSerialize["qrCode"] = o.QrCode
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullableCreateIBANOutput struct {
	value *CreateIBANOutput
	isSet bool
}

func (v NullableCreateIBANOutput) Get() *CreateIBANOutput {
	return v.value
}

func (v *NullableCreateIBANOutput) Set(val *CreateIBANOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateIBANOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateIBANOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateIBANOutput(val *CreateIBANOutput) *NullableCreateIBANOutput {
	return &NullableCreateIBANOutput{value: val, isSet: true}
}

func (v NullableCreateIBANOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateIBANOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


