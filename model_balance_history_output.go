/*
Lemonway DirectKit API 2.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BalanceHistoryOutput struct for BalanceHistoryOutput
type BalanceHistoryOutput struct {
	// Payment account balance.
	Balance *int32 `json:"balance,omitempty"`
	Error *Error `json:"error,omitempty"`
}

// NewBalanceHistoryOutput instantiates a new BalanceHistoryOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBalanceHistoryOutput() *BalanceHistoryOutput {
	this := BalanceHistoryOutput{}
	return &this
}

// NewBalanceHistoryOutputWithDefaults instantiates a new BalanceHistoryOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBalanceHistoryOutputWithDefaults() *BalanceHistoryOutput {
	this := BalanceHistoryOutput{}
	return &this
}

// GetBalance returns the Balance field value if set, zero value otherwise.
func (o *BalanceHistoryOutput) GetBalance() int32 {
	if o == nil || o.Balance == nil {
		var ret int32
		return ret
	}
	return *o.Balance
}

// GetBalanceOk returns a tuple with the Balance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BalanceHistoryOutput) GetBalanceOk() (*int32, bool) {
	if o == nil || o.Balance == nil {
		return nil, false
	}
	return o.Balance, true
}

// HasBalance returns a boolean if a field has been set.
func (o *BalanceHistoryOutput) HasBalance() bool {
	if o != nil && o.Balance != nil {
		return true
	}

	return false
}

// SetBalance gets a reference to the given int32 and assigns it to the Balance field.
func (o *BalanceHistoryOutput) SetBalance(v int32) {
	o.Balance = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *BalanceHistoryOutput) GetError() Error {
	if o == nil || o.Error == nil {
		var ret Error
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BalanceHistoryOutput) GetErrorOk() (*Error, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *BalanceHistoryOutput) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given Error and assigns it to the Error field.
func (o *BalanceHistoryOutput) SetError(v Error) {
	o.Error = &v
}

func (o BalanceHistoryOutput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Balance != nil {
		toSerialize["balance"] = o.Balance
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullableBalanceHistoryOutput struct {
	value *BalanceHistoryOutput
	isSet bool
}

func (v NullableBalanceHistoryOutput) Get() *BalanceHistoryOutput {
	return v.value
}

func (v *NullableBalanceHistoryOutput) Set(val *BalanceHistoryOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableBalanceHistoryOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableBalanceHistoryOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBalanceHistoryOutput(val *BalanceHistoryOutput) *NullableBalanceHistoryOutput {
	return &NullableBalanceHistoryOutput{value: val, isSet: true}
}

func (v NullableBalanceHistoryOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBalanceHistoryOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


