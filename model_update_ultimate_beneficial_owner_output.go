/*
Lemonway DirectKit API 2.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UpdateUltimateBeneficialOwnerOutput struct for UpdateUltimateBeneficialOwnerOutput
type UpdateUltimateBeneficialOwnerOutput struct {
	UltimateBeneficialOwnerId *int64 `json:"ultimateBeneficialOwnerId,omitempty"`
	Error *Error `json:"error,omitempty"`
}

// NewUpdateUltimateBeneficialOwnerOutput instantiates a new UpdateUltimateBeneficialOwnerOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateUltimateBeneficialOwnerOutput() *UpdateUltimateBeneficialOwnerOutput {
	this := UpdateUltimateBeneficialOwnerOutput{}
	return &this
}

// NewUpdateUltimateBeneficialOwnerOutputWithDefaults instantiates a new UpdateUltimateBeneficialOwnerOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateUltimateBeneficialOwnerOutputWithDefaults() *UpdateUltimateBeneficialOwnerOutput {
	this := UpdateUltimateBeneficialOwnerOutput{}
	return &this
}

// GetUltimateBeneficialOwnerId returns the UltimateBeneficialOwnerId field value if set, zero value otherwise.
func (o *UpdateUltimateBeneficialOwnerOutput) GetUltimateBeneficialOwnerId() int64 {
	if o == nil || o.UltimateBeneficialOwnerId == nil {
		var ret int64
		return ret
	}
	return *o.UltimateBeneficialOwnerId
}

// GetUltimateBeneficialOwnerIdOk returns a tuple with the UltimateBeneficialOwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUltimateBeneficialOwnerOutput) GetUltimateBeneficialOwnerIdOk() (*int64, bool) {
	if o == nil || o.UltimateBeneficialOwnerId == nil {
		return nil, false
	}
	return o.UltimateBeneficialOwnerId, true
}

// HasUltimateBeneficialOwnerId returns a boolean if a field has been set.
func (o *UpdateUltimateBeneficialOwnerOutput) HasUltimateBeneficialOwnerId() bool {
	if o != nil && o.UltimateBeneficialOwnerId != nil {
		return true
	}

	return false
}

// SetUltimateBeneficialOwnerId gets a reference to the given int64 and assigns it to the UltimateBeneficialOwnerId field.
func (o *UpdateUltimateBeneficialOwnerOutput) SetUltimateBeneficialOwnerId(v int64) {
	o.UltimateBeneficialOwnerId = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *UpdateUltimateBeneficialOwnerOutput) GetError() Error {
	if o == nil || o.Error == nil {
		var ret Error
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUltimateBeneficialOwnerOutput) GetErrorOk() (*Error, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *UpdateUltimateBeneficialOwnerOutput) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given Error and assigns it to the Error field.
func (o *UpdateUltimateBeneficialOwnerOutput) SetError(v Error) {
	o.Error = &v
}

func (o UpdateUltimateBeneficialOwnerOutput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.UltimateBeneficialOwnerId != nil {
		toSerialize["ultimateBeneficialOwnerId"] = o.UltimateBeneficialOwnerId
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateUltimateBeneficialOwnerOutput struct {
	value *UpdateUltimateBeneficialOwnerOutput
	isSet bool
}

func (v NullableUpdateUltimateBeneficialOwnerOutput) Get() *UpdateUltimateBeneficialOwnerOutput {
	return v.value
}

func (v *NullableUpdateUltimateBeneficialOwnerOutput) Set(val *UpdateUltimateBeneficialOwnerOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateUltimateBeneficialOwnerOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateUltimateBeneficialOwnerOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateUltimateBeneficialOwnerOutput(val *UpdateUltimateBeneficialOwnerOutput) *NullableUpdateUltimateBeneficialOwnerOutput {
	return &NullableUpdateUltimateBeneficialOwnerOutput{value: val, isSet: true}
}

func (v NullableUpdateUltimateBeneficialOwnerOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateUltimateBeneficialOwnerOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


