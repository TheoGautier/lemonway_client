/*
Lemonway DirectKit API 2.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TransactionsTransactionP2P struct for TransactionsTransactionP2P
type TransactionsTransactionP2P struct {
	Value []TransactionP2P `json:"value,omitempty"`
}

// NewTransactionsTransactionP2P instantiates a new TransactionsTransactionP2P object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionsTransactionP2P() *TransactionsTransactionP2P {
	this := TransactionsTransactionP2P{}
	return &this
}

// NewTransactionsTransactionP2PWithDefaults instantiates a new TransactionsTransactionP2P object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionsTransactionP2PWithDefaults() *TransactionsTransactionP2P {
	this := TransactionsTransactionP2P{}
	return &this
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *TransactionsTransactionP2P) GetValue() []TransactionP2P {
	if o == nil || o.Value == nil {
		var ret []TransactionP2P
		return ret
	}
	return o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionsTransactionP2P) GetValueOk() ([]TransactionP2P, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *TransactionsTransactionP2P) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given []TransactionP2P and assigns it to the Value field.
func (o *TransactionsTransactionP2P) SetValue(v []TransactionP2P) {
	o.Value = v
}

func (o TransactionsTransactionP2P) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableTransactionsTransactionP2P struct {
	value *TransactionsTransactionP2P
	isSet bool
}

func (v NullableTransactionsTransactionP2P) Get() *TransactionsTransactionP2P {
	return v.value
}

func (v *NullableTransactionsTransactionP2P) Set(val *TransactionsTransactionP2P) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionsTransactionP2P) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionsTransactionP2P) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionsTransactionP2P(val *TransactionsTransactionP2P) *NullableTransactionsTransactionP2P {
	return &NullableTransactionsTransactionP2P{value: val, isSet: true}
}

func (v NullableTransactionsTransactionP2P) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionsTransactionP2P) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


