/*
Lemonway DirectKit API 2.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Redirections Redirection urls
type Redirections struct {
	// Return URL
	ReturnUrl string `json:"returnUrl"`
	// Error URl
	ErrorUrl string `json:"errorUrl"`
	// Cancel URL
	CancelUrl string `json:"cancelUrl"`
}

// NewRedirections instantiates a new Redirections object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRedirections(returnUrl string, errorUrl string, cancelUrl string) *Redirections {
	this := Redirections{}
	this.ReturnUrl = returnUrl
	this.ErrorUrl = errorUrl
	this.CancelUrl = cancelUrl
	return &this
}

// NewRedirectionsWithDefaults instantiates a new Redirections object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRedirectionsWithDefaults() *Redirections {
	this := Redirections{}
	return &this
}

// GetReturnUrl returns the ReturnUrl field value
func (o *Redirections) GetReturnUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReturnUrl
}

// GetReturnUrlOk returns a tuple with the ReturnUrl field value
// and a boolean to check if the value has been set.
func (o *Redirections) GetReturnUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReturnUrl, true
}

// SetReturnUrl sets field value
func (o *Redirections) SetReturnUrl(v string) {
	o.ReturnUrl = v
}

// GetErrorUrl returns the ErrorUrl field value
func (o *Redirections) GetErrorUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ErrorUrl
}

// GetErrorUrlOk returns a tuple with the ErrorUrl field value
// and a boolean to check if the value has been set.
func (o *Redirections) GetErrorUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ErrorUrl, true
}

// SetErrorUrl sets field value
func (o *Redirections) SetErrorUrl(v string) {
	o.ErrorUrl = v
}

// GetCancelUrl returns the CancelUrl field value
func (o *Redirections) GetCancelUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CancelUrl
}

// GetCancelUrlOk returns a tuple with the CancelUrl field value
// and a boolean to check if the value has been set.
func (o *Redirections) GetCancelUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CancelUrl, true
}

// SetCancelUrl sets field value
func (o *Redirections) SetCancelUrl(v string) {
	o.CancelUrl = v
}

func (o Redirections) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["returnUrl"] = o.ReturnUrl
	}
	if true {
		toSerialize["errorUrl"] = o.ErrorUrl
	}
	if true {
		toSerialize["cancelUrl"] = o.CancelUrl
	}
	return json.Marshal(toSerialize)
}

type NullableRedirections struct {
	value *Redirections
	isSet bool
}

func (v NullableRedirections) Get() *Redirections {
	return v.value
}

func (v *NullableRedirections) Set(val *Redirections) {
	v.value = val
	v.isSet = true
}

func (v NullableRedirections) IsSet() bool {
	return v.isSet
}

func (v *NullableRedirections) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRedirections(val *Redirections) *NullableRedirections {
	return &NullableRedirections{value: val, isSet: true}
}

func (v NullableRedirections) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRedirections) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


