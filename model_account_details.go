/*
Lemonway DirectKit API 2.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AccountDetails struct for AccountDetails
type AccountDetails struct {
	// Payment Account ID
	Id *string `json:"id,omitempty"`
	// Internal ID given by Lemonway (ID displayed on the Dashboard)
	InternalId *int64 `json:"internalId,omitempty"`
	// Client Title
	ClientTitle *string `json:"clientTitle,omitempty"`
	// Holder's First Name
	Firstname *string `json:"firstname,omitempty"`
	// Holder's Last Name
	Lastname *string `json:"lastname,omitempty"`
	// Payment Account Balance Amount
	Balance *int32 `json:"balance,omitempty"`
	// Email
	Email *string `json:"email,omitempty"`
	// | Status Code                                                     | Payment Account Status                                         |  |-----------------------------------------------------------------|----------------------------------------------------------------|  | -1                                                              | Wallet SC                                                      |  | 2                                                               | Registered, not verified: missing document(s)                  |  | 3                                                               | Registered, not verified: document(s) rejected                 |  | 5                                                               | Registered, not verified: KYC 1 (status given at registration) |  | 6                                                               | Registered and verified: KYC 2                                 |  | 7*                                                              | Registered and verified by previous PSP: KYC 3                 |  | 8                                                               | Registered, not verified: expired document(s)                  |  | 10                                                              | Blocked                                                        |  | 12                                                              | Closed                                                         |  | 13*                                                             | Registered, status is being updated from KYC 2 to KYC 3        |  | 14*                                                             | One-time customer                                              |  | 15*                                                             | Special wallet for crowdlending                                |  | 16*                                                             | Technical wallet                                               |  | *these status may or may not be used depending on your business |                                                                |
	Status *int32 `json:"status,omitempty"`
	// Indicates if Account is blocked or not:  0: Not blocked  1: Blocked
	Isblocked *bool `json:"isblocked,omitempty"`
	// Indicates Account type:  0: Individual  1: Legal
	AccountType *int32 `json:"accountType,omitempty"`
	Company *Company `json:"company,omitempty"`
	Adresse *Address `json:"adresse,omitempty"`
	Birth *Birth `json:"birth,omitempty"`
	// Nationality
	Nationality *string `json:"nationality,omitempty"`
	// Phone number with MSISDN format
	PhoneNumber *string `json:"phoneNumber,omitempty"`
	// Mobile phone number with MSISDN format
	MobileNumber *string `json:"mobileNumber,omitempty"`
	// For crowdfunding/loan platforms, indicates if the Account is created for a debtor   0 or empty: no  1: yes
	IsDebtor *bool `json:"isDebtor,omitempty"`
	// Indicates if the payment Account is created for a payer or a beneficiary:  * Empty: unknown status (default)  * 1 = Payer  * 2 = Beneficiary
	PayerOrBeneficiary *int32 `json:"payerOrBeneficiary,omitempty"`
}

// NewAccountDetails instantiates a new AccountDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountDetails() *AccountDetails {
	this := AccountDetails{}
	return &this
}

// NewAccountDetailsWithDefaults instantiates a new AccountDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountDetailsWithDefaults() *AccountDetails {
	this := AccountDetails{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AccountDetails) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountDetails) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AccountDetails) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AccountDetails) SetId(v string) {
	o.Id = &v
}

// GetInternalId returns the InternalId field value if set, zero value otherwise.
func (o *AccountDetails) GetInternalId() int64 {
	if o == nil || o.InternalId == nil {
		var ret int64
		return ret
	}
	return *o.InternalId
}

// GetInternalIdOk returns a tuple with the InternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountDetails) GetInternalIdOk() (*int64, bool) {
	if o == nil || o.InternalId == nil {
		return nil, false
	}
	return o.InternalId, true
}

// HasInternalId returns a boolean if a field has been set.
func (o *AccountDetails) HasInternalId() bool {
	if o != nil && o.InternalId != nil {
		return true
	}

	return false
}

// SetInternalId gets a reference to the given int64 and assigns it to the InternalId field.
func (o *AccountDetails) SetInternalId(v int64) {
	o.InternalId = &v
}

// GetClientTitle returns the ClientTitle field value if set, zero value otherwise.
func (o *AccountDetails) GetClientTitle() string {
	if o == nil || o.ClientTitle == nil {
		var ret string
		return ret
	}
	return *o.ClientTitle
}

// GetClientTitleOk returns a tuple with the ClientTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountDetails) GetClientTitleOk() (*string, bool) {
	if o == nil || o.ClientTitle == nil {
		return nil, false
	}
	return o.ClientTitle, true
}

// HasClientTitle returns a boolean if a field has been set.
func (o *AccountDetails) HasClientTitle() bool {
	if o != nil && o.ClientTitle != nil {
		return true
	}

	return false
}

// SetClientTitle gets a reference to the given string and assigns it to the ClientTitle field.
func (o *AccountDetails) SetClientTitle(v string) {
	o.ClientTitle = &v
}

// GetFirstname returns the Firstname field value if set, zero value otherwise.
func (o *AccountDetails) GetFirstname() string {
	if o == nil || o.Firstname == nil {
		var ret string
		return ret
	}
	return *o.Firstname
}

// GetFirstnameOk returns a tuple with the Firstname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountDetails) GetFirstnameOk() (*string, bool) {
	if o == nil || o.Firstname == nil {
		return nil, false
	}
	return o.Firstname, true
}

// HasFirstname returns a boolean if a field has been set.
func (o *AccountDetails) HasFirstname() bool {
	if o != nil && o.Firstname != nil {
		return true
	}

	return false
}

// SetFirstname gets a reference to the given string and assigns it to the Firstname field.
func (o *AccountDetails) SetFirstname(v string) {
	o.Firstname = &v
}

// GetLastname returns the Lastname field value if set, zero value otherwise.
func (o *AccountDetails) GetLastname() string {
	if o == nil || o.Lastname == nil {
		var ret string
		return ret
	}
	return *o.Lastname
}

// GetLastnameOk returns a tuple with the Lastname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountDetails) GetLastnameOk() (*string, bool) {
	if o == nil || o.Lastname == nil {
		return nil, false
	}
	return o.Lastname, true
}

// HasLastname returns a boolean if a field has been set.
func (o *AccountDetails) HasLastname() bool {
	if o != nil && o.Lastname != nil {
		return true
	}

	return false
}

// SetLastname gets a reference to the given string and assigns it to the Lastname field.
func (o *AccountDetails) SetLastname(v string) {
	o.Lastname = &v
}

// GetBalance returns the Balance field value if set, zero value otherwise.
func (o *AccountDetails) GetBalance() int32 {
	if o == nil || o.Balance == nil {
		var ret int32
		return ret
	}
	return *o.Balance
}

// GetBalanceOk returns a tuple with the Balance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountDetails) GetBalanceOk() (*int32, bool) {
	if o == nil || o.Balance == nil {
		return nil, false
	}
	return o.Balance, true
}

// HasBalance returns a boolean if a field has been set.
func (o *AccountDetails) HasBalance() bool {
	if o != nil && o.Balance != nil {
		return true
	}

	return false
}

// SetBalance gets a reference to the given int32 and assigns it to the Balance field.
func (o *AccountDetails) SetBalance(v int32) {
	o.Balance = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *AccountDetails) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountDetails) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *AccountDetails) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *AccountDetails) SetEmail(v string) {
	o.Email = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AccountDetails) GetStatus() int32 {
	if o == nil || o.Status == nil {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountDetails) GetStatusOk() (*int32, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AccountDetails) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *AccountDetails) SetStatus(v int32) {
	o.Status = &v
}

// GetIsblocked returns the Isblocked field value if set, zero value otherwise.
func (o *AccountDetails) GetIsblocked() bool {
	if o == nil || o.Isblocked == nil {
		var ret bool
		return ret
	}
	return *o.Isblocked
}

// GetIsblockedOk returns a tuple with the Isblocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountDetails) GetIsblockedOk() (*bool, bool) {
	if o == nil || o.Isblocked == nil {
		return nil, false
	}
	return o.Isblocked, true
}

// HasIsblocked returns a boolean if a field has been set.
func (o *AccountDetails) HasIsblocked() bool {
	if o != nil && o.Isblocked != nil {
		return true
	}

	return false
}

// SetIsblocked gets a reference to the given bool and assigns it to the Isblocked field.
func (o *AccountDetails) SetIsblocked(v bool) {
	o.Isblocked = &v
}

// GetAccountType returns the AccountType field value if set, zero value otherwise.
func (o *AccountDetails) GetAccountType() int32 {
	if o == nil || o.AccountType == nil {
		var ret int32
		return ret
	}
	return *o.AccountType
}

// GetAccountTypeOk returns a tuple with the AccountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountDetails) GetAccountTypeOk() (*int32, bool) {
	if o == nil || o.AccountType == nil {
		return nil, false
	}
	return o.AccountType, true
}

// HasAccountType returns a boolean if a field has been set.
func (o *AccountDetails) HasAccountType() bool {
	if o != nil && o.AccountType != nil {
		return true
	}

	return false
}

// SetAccountType gets a reference to the given int32 and assigns it to the AccountType field.
func (o *AccountDetails) SetAccountType(v int32) {
	o.AccountType = &v
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *AccountDetails) GetCompany() Company {
	if o == nil || o.Company == nil {
		var ret Company
		return ret
	}
	return *o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountDetails) GetCompanyOk() (*Company, bool) {
	if o == nil || o.Company == nil {
		return nil, false
	}
	return o.Company, true
}

// HasCompany returns a boolean if a field has been set.
func (o *AccountDetails) HasCompany() bool {
	if o != nil && o.Company != nil {
		return true
	}

	return false
}

// SetCompany gets a reference to the given Company and assigns it to the Company field.
func (o *AccountDetails) SetCompany(v Company) {
	o.Company = &v
}

// GetAdresse returns the Adresse field value if set, zero value otherwise.
func (o *AccountDetails) GetAdresse() Address {
	if o == nil || o.Adresse == nil {
		var ret Address
		return ret
	}
	return *o.Adresse
}

// GetAdresseOk returns a tuple with the Adresse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountDetails) GetAdresseOk() (*Address, bool) {
	if o == nil || o.Adresse == nil {
		return nil, false
	}
	return o.Adresse, true
}

// HasAdresse returns a boolean if a field has been set.
func (o *AccountDetails) HasAdresse() bool {
	if o != nil && o.Adresse != nil {
		return true
	}

	return false
}

// SetAdresse gets a reference to the given Address and assigns it to the Adresse field.
func (o *AccountDetails) SetAdresse(v Address) {
	o.Adresse = &v
}

// GetBirth returns the Birth field value if set, zero value otherwise.
func (o *AccountDetails) GetBirth() Birth {
	if o == nil || o.Birth == nil {
		var ret Birth
		return ret
	}
	return *o.Birth
}

// GetBirthOk returns a tuple with the Birth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountDetails) GetBirthOk() (*Birth, bool) {
	if o == nil || o.Birth == nil {
		return nil, false
	}
	return o.Birth, true
}

// HasBirth returns a boolean if a field has been set.
func (o *AccountDetails) HasBirth() bool {
	if o != nil && o.Birth != nil {
		return true
	}

	return false
}

// SetBirth gets a reference to the given Birth and assigns it to the Birth field.
func (o *AccountDetails) SetBirth(v Birth) {
	o.Birth = &v
}

// GetNationality returns the Nationality field value if set, zero value otherwise.
func (o *AccountDetails) GetNationality() string {
	if o == nil || o.Nationality == nil {
		var ret string
		return ret
	}
	return *o.Nationality
}

// GetNationalityOk returns a tuple with the Nationality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountDetails) GetNationalityOk() (*string, bool) {
	if o == nil || o.Nationality == nil {
		return nil, false
	}
	return o.Nationality, true
}

// HasNationality returns a boolean if a field has been set.
func (o *AccountDetails) HasNationality() bool {
	if o != nil && o.Nationality != nil {
		return true
	}

	return false
}

// SetNationality gets a reference to the given string and assigns it to the Nationality field.
func (o *AccountDetails) SetNationality(v string) {
	o.Nationality = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *AccountDetails) GetPhoneNumber() string {
	if o == nil || o.PhoneNumber == nil {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountDetails) GetPhoneNumberOk() (*string, bool) {
	if o == nil || o.PhoneNumber == nil {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *AccountDetails) HasPhoneNumber() bool {
	if o != nil && o.PhoneNumber != nil {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *AccountDetails) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetMobileNumber returns the MobileNumber field value if set, zero value otherwise.
func (o *AccountDetails) GetMobileNumber() string {
	if o == nil || o.MobileNumber == nil {
		var ret string
		return ret
	}
	return *o.MobileNumber
}

// GetMobileNumberOk returns a tuple with the MobileNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountDetails) GetMobileNumberOk() (*string, bool) {
	if o == nil || o.MobileNumber == nil {
		return nil, false
	}
	return o.MobileNumber, true
}

// HasMobileNumber returns a boolean if a field has been set.
func (o *AccountDetails) HasMobileNumber() bool {
	if o != nil && o.MobileNumber != nil {
		return true
	}

	return false
}

// SetMobileNumber gets a reference to the given string and assigns it to the MobileNumber field.
func (o *AccountDetails) SetMobileNumber(v string) {
	o.MobileNumber = &v
}

// GetIsDebtor returns the IsDebtor field value if set, zero value otherwise.
func (o *AccountDetails) GetIsDebtor() bool {
	if o == nil || o.IsDebtor == nil {
		var ret bool
		return ret
	}
	return *o.IsDebtor
}

// GetIsDebtorOk returns a tuple with the IsDebtor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountDetails) GetIsDebtorOk() (*bool, bool) {
	if o == nil || o.IsDebtor == nil {
		return nil, false
	}
	return o.IsDebtor, true
}

// HasIsDebtor returns a boolean if a field has been set.
func (o *AccountDetails) HasIsDebtor() bool {
	if o != nil && o.IsDebtor != nil {
		return true
	}

	return false
}

// SetIsDebtor gets a reference to the given bool and assigns it to the IsDebtor field.
func (o *AccountDetails) SetIsDebtor(v bool) {
	o.IsDebtor = &v
}

// GetPayerOrBeneficiary returns the PayerOrBeneficiary field value if set, zero value otherwise.
func (o *AccountDetails) GetPayerOrBeneficiary() int32 {
	if o == nil || o.PayerOrBeneficiary == nil {
		var ret int32
		return ret
	}
	return *o.PayerOrBeneficiary
}

// GetPayerOrBeneficiaryOk returns a tuple with the PayerOrBeneficiary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountDetails) GetPayerOrBeneficiaryOk() (*int32, bool) {
	if o == nil || o.PayerOrBeneficiary == nil {
		return nil, false
	}
	return o.PayerOrBeneficiary, true
}

// HasPayerOrBeneficiary returns a boolean if a field has been set.
func (o *AccountDetails) HasPayerOrBeneficiary() bool {
	if o != nil && o.PayerOrBeneficiary != nil {
		return true
	}

	return false
}

// SetPayerOrBeneficiary gets a reference to the given int32 and assigns it to the PayerOrBeneficiary field.
func (o *AccountDetails) SetPayerOrBeneficiary(v int32) {
	o.PayerOrBeneficiary = &v
}

func (o AccountDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.InternalId != nil {
		toSerialize["internalId"] = o.InternalId
	}
	if o.ClientTitle != nil {
		toSerialize["clientTitle"] = o.ClientTitle
	}
	if o.Firstname != nil {
		toSerialize["firstname"] = o.Firstname
	}
	if o.Lastname != nil {
		toSerialize["lastname"] = o.Lastname
	}
	if o.Balance != nil {
		toSerialize["balance"] = o.Balance
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Isblocked != nil {
		toSerialize["isblocked"] = o.Isblocked
	}
	if o.AccountType != nil {
		toSerialize["accountType"] = o.AccountType
	}
	if o.Company != nil {
		toSerialize["company"] = o.Company
	}
	if o.Adresse != nil {
		toSerialize["adresse"] = o.Adresse
	}
	if o.Birth != nil {
		toSerialize["birth"] = o.Birth
	}
	if o.Nationality != nil {
		toSerialize["nationality"] = o.Nationality
	}
	if o.PhoneNumber != nil {
		toSerialize["phoneNumber"] = o.PhoneNumber
	}
	if o.MobileNumber != nil {
		toSerialize["mobileNumber"] = o.MobileNumber
	}
	if o.IsDebtor != nil {
		toSerialize["isDebtor"] = o.IsDebtor
	}
	if o.PayerOrBeneficiary != nil {
		toSerialize["payerOrBeneficiary"] = o.PayerOrBeneficiary
	}
	return json.Marshal(toSerialize)
}

type NullableAccountDetails struct {
	value *AccountDetails
	isSet bool
}

func (v NullableAccountDetails) Get() *AccountDetails {
	return v.value
}

func (v *NullableAccountDetails) Set(val *AccountDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountDetails(val *AccountDetails) *NullableAccountDetails {
	return &NullableAccountDetails{value: val, isSet: true}
}

func (v NullableAccountDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


