/*
Lemonway DirectKit API 2.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// EnrolmentInitInput struct for EnrolmentInitInput
type EnrolmentInitInput struct {
	// Identification provider<br/>0 = Deutsche Post POSTIDENT.<br/>
	Provider int32 `json:"Provider"`
	// Forwarding URL to which in case of a successful identification should be forwarded
	SuccessUrl *string `json:"successUrl,omitempty"`
	// Forwarding URL to which in case of an unsuccessful identification should be forwarded
	DeclinedUrl *string `json:"declinedUrl,omitempty"`
	// Forwarding URL to forward to when the coupon has been downloaded
	CouponRequestedUrl *string `json:"couponRequestedUrl,omitempty"`
	// Forwarding URL to forward to when the coupon has been downloaded
	ReviewPendingUrl *string `json:"reviewPendingUrl,omitempty"`
	// Forwarding URL to which in case of incomplete identification should be forwarded
	IncompleteUrl *string `json:"incompleteUrl,omitempty"`
}

// NewEnrolmentInitInput instantiates a new EnrolmentInitInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnrolmentInitInput(provider int32) *EnrolmentInitInput {
	this := EnrolmentInitInput{}
	this.Provider = provider
	return &this
}

// NewEnrolmentInitInputWithDefaults instantiates a new EnrolmentInitInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnrolmentInitInputWithDefaults() *EnrolmentInitInput {
	this := EnrolmentInitInput{}
	return &this
}

// GetProvider returns the Provider field value
func (o *EnrolmentInitInput) GetProvider() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Provider
}

// GetProviderOk returns a tuple with the Provider field value
// and a boolean to check if the value has been set.
func (o *EnrolmentInitInput) GetProviderOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Provider, true
}

// SetProvider sets field value
func (o *EnrolmentInitInput) SetProvider(v int32) {
	o.Provider = v
}

// GetSuccessUrl returns the SuccessUrl field value if set, zero value otherwise.
func (o *EnrolmentInitInput) GetSuccessUrl() string {
	if o == nil || o.SuccessUrl == nil {
		var ret string
		return ret
	}
	return *o.SuccessUrl
}

// GetSuccessUrlOk returns a tuple with the SuccessUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrolmentInitInput) GetSuccessUrlOk() (*string, bool) {
	if o == nil || o.SuccessUrl == nil {
		return nil, false
	}
	return o.SuccessUrl, true
}

// HasSuccessUrl returns a boolean if a field has been set.
func (o *EnrolmentInitInput) HasSuccessUrl() bool {
	if o != nil && o.SuccessUrl != nil {
		return true
	}

	return false
}

// SetSuccessUrl gets a reference to the given string and assigns it to the SuccessUrl field.
func (o *EnrolmentInitInput) SetSuccessUrl(v string) {
	o.SuccessUrl = &v
}

// GetDeclinedUrl returns the DeclinedUrl field value if set, zero value otherwise.
func (o *EnrolmentInitInput) GetDeclinedUrl() string {
	if o == nil || o.DeclinedUrl == nil {
		var ret string
		return ret
	}
	return *o.DeclinedUrl
}

// GetDeclinedUrlOk returns a tuple with the DeclinedUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrolmentInitInput) GetDeclinedUrlOk() (*string, bool) {
	if o == nil || o.DeclinedUrl == nil {
		return nil, false
	}
	return o.DeclinedUrl, true
}

// HasDeclinedUrl returns a boolean if a field has been set.
func (o *EnrolmentInitInput) HasDeclinedUrl() bool {
	if o != nil && o.DeclinedUrl != nil {
		return true
	}

	return false
}

// SetDeclinedUrl gets a reference to the given string and assigns it to the DeclinedUrl field.
func (o *EnrolmentInitInput) SetDeclinedUrl(v string) {
	o.DeclinedUrl = &v
}

// GetCouponRequestedUrl returns the CouponRequestedUrl field value if set, zero value otherwise.
func (o *EnrolmentInitInput) GetCouponRequestedUrl() string {
	if o == nil || o.CouponRequestedUrl == nil {
		var ret string
		return ret
	}
	return *o.CouponRequestedUrl
}

// GetCouponRequestedUrlOk returns a tuple with the CouponRequestedUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrolmentInitInput) GetCouponRequestedUrlOk() (*string, bool) {
	if o == nil || o.CouponRequestedUrl == nil {
		return nil, false
	}
	return o.CouponRequestedUrl, true
}

// HasCouponRequestedUrl returns a boolean if a field has been set.
func (o *EnrolmentInitInput) HasCouponRequestedUrl() bool {
	if o != nil && o.CouponRequestedUrl != nil {
		return true
	}

	return false
}

// SetCouponRequestedUrl gets a reference to the given string and assigns it to the CouponRequestedUrl field.
func (o *EnrolmentInitInput) SetCouponRequestedUrl(v string) {
	o.CouponRequestedUrl = &v
}

// GetReviewPendingUrl returns the ReviewPendingUrl field value if set, zero value otherwise.
func (o *EnrolmentInitInput) GetReviewPendingUrl() string {
	if o == nil || o.ReviewPendingUrl == nil {
		var ret string
		return ret
	}
	return *o.ReviewPendingUrl
}

// GetReviewPendingUrlOk returns a tuple with the ReviewPendingUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrolmentInitInput) GetReviewPendingUrlOk() (*string, bool) {
	if o == nil || o.ReviewPendingUrl == nil {
		return nil, false
	}
	return o.ReviewPendingUrl, true
}

// HasReviewPendingUrl returns a boolean if a field has been set.
func (o *EnrolmentInitInput) HasReviewPendingUrl() bool {
	if o != nil && o.ReviewPendingUrl != nil {
		return true
	}

	return false
}

// SetReviewPendingUrl gets a reference to the given string and assigns it to the ReviewPendingUrl field.
func (o *EnrolmentInitInput) SetReviewPendingUrl(v string) {
	o.ReviewPendingUrl = &v
}

// GetIncompleteUrl returns the IncompleteUrl field value if set, zero value otherwise.
func (o *EnrolmentInitInput) GetIncompleteUrl() string {
	if o == nil || o.IncompleteUrl == nil {
		var ret string
		return ret
	}
	return *o.IncompleteUrl
}

// GetIncompleteUrlOk returns a tuple with the IncompleteUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrolmentInitInput) GetIncompleteUrlOk() (*string, bool) {
	if o == nil || o.IncompleteUrl == nil {
		return nil, false
	}
	return o.IncompleteUrl, true
}

// HasIncompleteUrl returns a boolean if a field has been set.
func (o *EnrolmentInitInput) HasIncompleteUrl() bool {
	if o != nil && o.IncompleteUrl != nil {
		return true
	}

	return false
}

// SetIncompleteUrl gets a reference to the given string and assigns it to the IncompleteUrl field.
func (o *EnrolmentInitInput) SetIncompleteUrl(v string) {
	o.IncompleteUrl = &v
}

func (o EnrolmentInitInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["Provider"] = o.Provider
	}
	if o.SuccessUrl != nil {
		toSerialize["successUrl"] = o.SuccessUrl
	}
	if o.DeclinedUrl != nil {
		toSerialize["declinedUrl"] = o.DeclinedUrl
	}
	if o.CouponRequestedUrl != nil {
		toSerialize["couponRequestedUrl"] = o.CouponRequestedUrl
	}
	if o.ReviewPendingUrl != nil {
		toSerialize["reviewPendingUrl"] = o.ReviewPendingUrl
	}
	if o.IncompleteUrl != nil {
		toSerialize["incompleteUrl"] = o.IncompleteUrl
	}
	return json.Marshal(toSerialize)
}

type NullableEnrolmentInitInput struct {
	value *EnrolmentInitInput
	isSet bool
}

func (v NullableEnrolmentInitInput) Get() *EnrolmentInitInput {
	return v.value
}

func (v *NullableEnrolmentInitInput) Set(val *EnrolmentInitInput) {
	v.value = val
	v.isSet = true
}

func (v NullableEnrolmentInitInput) IsSet() bool {
	return v.isSet
}

func (v *NullableEnrolmentInitInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnrolmentInitInput(val *EnrolmentInitInput) *NullableEnrolmentInitInput {
	return &NullableEnrolmentInitInput{value: val, isSet: true}
}

func (v NullableEnrolmentInitInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnrolmentInitInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


