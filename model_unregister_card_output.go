/*
Lemonway DirectKit API 2.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UnregisterCardOutput struct for UnregisterCardOutput
type UnregisterCardOutput struct {
	// ID Card
	CardId *int64 `json:"cardId,omitempty"`
	Error *Error `json:"error,omitempty"`
}

// NewUnregisterCardOutput instantiates a new UnregisterCardOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnregisterCardOutput() *UnregisterCardOutput {
	this := UnregisterCardOutput{}
	return &this
}

// NewUnregisterCardOutputWithDefaults instantiates a new UnregisterCardOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnregisterCardOutputWithDefaults() *UnregisterCardOutput {
	this := UnregisterCardOutput{}
	return &this
}

// GetCardId returns the CardId field value if set, zero value otherwise.
func (o *UnregisterCardOutput) GetCardId() int64 {
	if o == nil || o.CardId == nil {
		var ret int64
		return ret
	}
	return *o.CardId
}

// GetCardIdOk returns a tuple with the CardId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnregisterCardOutput) GetCardIdOk() (*int64, bool) {
	if o == nil || o.CardId == nil {
		return nil, false
	}
	return o.CardId, true
}

// HasCardId returns a boolean if a field has been set.
func (o *UnregisterCardOutput) HasCardId() bool {
	if o != nil && o.CardId != nil {
		return true
	}

	return false
}

// SetCardId gets a reference to the given int64 and assigns it to the CardId field.
func (o *UnregisterCardOutput) SetCardId(v int64) {
	o.CardId = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *UnregisterCardOutput) GetError() Error {
	if o == nil || o.Error == nil {
		var ret Error
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnregisterCardOutput) GetErrorOk() (*Error, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *UnregisterCardOutput) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given Error and assigns it to the Error field.
func (o *UnregisterCardOutput) SetError(v Error) {
	o.Error = &v
}

func (o UnregisterCardOutput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CardId != nil {
		toSerialize["cardId"] = o.CardId
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullableUnregisterCardOutput struct {
	value *UnregisterCardOutput
	isSet bool
}

func (v NullableUnregisterCardOutput) Get() *UnregisterCardOutput {
	return v.value
}

func (v *NullableUnregisterCardOutput) Set(val *UnregisterCardOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableUnregisterCardOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableUnregisterCardOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnregisterCardOutput(val *UnregisterCardOutput) *NullableUnregisterCardOutput {
	return &NullableUnregisterCardOutput{value: val, isSet: true}
}

func (v NullableUnregisterCardOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnregisterCardOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


