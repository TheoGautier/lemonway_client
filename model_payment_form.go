/*
Lemonway DirectKit API 2.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PaymentForm struct for PaymentForm
type PaymentForm struct {
	WalletIp *string `json:"walletIp,omitempty"`
	WalletUa *string `json:"walletUa,omitempty"`
	AmountTotRange *string `json:"amountTotRange,omitempty"`
	AmountCom *string `json:"amountCom,omitempty"`
	Language *string `json:"language,omitempty"`
	Version *string `json:"version,omitempty"`
	Style *string `json:"style,omitempty"`
	// Mercanet v1 only: Link to a custom Mercanet CSS Stylesheet.  The stylesheet should be publicly accessible via HTTPS
	AtosStyle *string `json:"atosStyle,omitempty"`
	NotifUrl *string `json:"notifUrl,omitempty"`
	// Reserved for future version
	Options *string `json:"options,omitempty"`
	Active *bool `json:"active,omitempty"`
	RaisonSociale *string `json:"raisonSociale,omitempty"`
	// Payment Form ID
	Id *string `json:"id,omitempty"`
	// Optional identity of the payment form. You should not use special character here.
	OptId *string `json:"optId,omitempty"`
	// Payer Account  If this field is filled then the money reaches this wallet before arriving at the beneficiary wallet (via a transfer wallet to wallet)  note: Don't put the <b>SC Wallet</b> here, it won't work. You cannot credit the <b>SC Wallet</b> with a credit card.
	AccountPayer *string `json:"accountPayer,omitempty"`
	// Beneficiary Account  if this field is not filled then the end-user must to fill its value on the payment form. We recommend you to always fill it instead of your end-user.  note: Don't put the <b>SC Wallet</b> here, it won't work. You cannot credit the <b>SC Wallet</b> with a credit card.
	AccountReceiver *string `json:"accountReceiver,omitempty"`
	Comment *string `json:"comment,omitempty"`
	// URL redirection after the payment procedure is successfully finished
	ReturnUrl *string `json:"returnUrl,omitempty"`
	// URL redirection after the payment procedure is cancelled
	CancelUrl *string `json:"cancelUrl,omitempty"`
	// URL redirection after the payment procedure is failed
	ErrorUrl *string `json:"errorUrl,omitempty"`
	// Payer's First Name  If this field is not filled then the end-user have to fill it in the payment form.
	FirstNamePayer *string `json:"firstNamePayer,omitempty"`
	// Payer's Last Name  If this field is not filled then the end-user have to fill it in the payment form.
	LastNamePayer *string `json:"lastNamePayer,omitempty"`
	// Payer's Email  If this field is not filled then the end-user have to fill it in the payment form.
	EmailPayer *string `json:"emailPayer,omitempty"`
}

// NewPaymentForm instantiates a new PaymentForm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentForm() *PaymentForm {
	this := PaymentForm{}
	return &this
}

// NewPaymentFormWithDefaults instantiates a new PaymentForm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentFormWithDefaults() *PaymentForm {
	this := PaymentForm{}
	return &this
}

// GetWalletIp returns the WalletIp field value if set, zero value otherwise.
func (o *PaymentForm) GetWalletIp() string {
	if o == nil || o.WalletIp == nil {
		var ret string
		return ret
	}
	return *o.WalletIp
}

// GetWalletIpOk returns a tuple with the WalletIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentForm) GetWalletIpOk() (*string, bool) {
	if o == nil || o.WalletIp == nil {
		return nil, false
	}
	return o.WalletIp, true
}

// HasWalletIp returns a boolean if a field has been set.
func (o *PaymentForm) HasWalletIp() bool {
	if o != nil && o.WalletIp != nil {
		return true
	}

	return false
}

// SetWalletIp gets a reference to the given string and assigns it to the WalletIp field.
func (o *PaymentForm) SetWalletIp(v string) {
	o.WalletIp = &v
}

// GetWalletUa returns the WalletUa field value if set, zero value otherwise.
func (o *PaymentForm) GetWalletUa() string {
	if o == nil || o.WalletUa == nil {
		var ret string
		return ret
	}
	return *o.WalletUa
}

// GetWalletUaOk returns a tuple with the WalletUa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentForm) GetWalletUaOk() (*string, bool) {
	if o == nil || o.WalletUa == nil {
		return nil, false
	}
	return o.WalletUa, true
}

// HasWalletUa returns a boolean if a field has been set.
func (o *PaymentForm) HasWalletUa() bool {
	if o != nil && o.WalletUa != nil {
		return true
	}

	return false
}

// SetWalletUa gets a reference to the given string and assigns it to the WalletUa field.
func (o *PaymentForm) SetWalletUa(v string) {
	o.WalletUa = &v
}

// GetAmountTotRange returns the AmountTotRange field value if set, zero value otherwise.
func (o *PaymentForm) GetAmountTotRange() string {
	if o == nil || o.AmountTotRange == nil {
		var ret string
		return ret
	}
	return *o.AmountTotRange
}

// GetAmountTotRangeOk returns a tuple with the AmountTotRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentForm) GetAmountTotRangeOk() (*string, bool) {
	if o == nil || o.AmountTotRange == nil {
		return nil, false
	}
	return o.AmountTotRange, true
}

// HasAmountTotRange returns a boolean if a field has been set.
func (o *PaymentForm) HasAmountTotRange() bool {
	if o != nil && o.AmountTotRange != nil {
		return true
	}

	return false
}

// SetAmountTotRange gets a reference to the given string and assigns it to the AmountTotRange field.
func (o *PaymentForm) SetAmountTotRange(v string) {
	o.AmountTotRange = &v
}

// GetAmountCom returns the AmountCom field value if set, zero value otherwise.
func (o *PaymentForm) GetAmountCom() string {
	if o == nil || o.AmountCom == nil {
		var ret string
		return ret
	}
	return *o.AmountCom
}

// GetAmountComOk returns a tuple with the AmountCom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentForm) GetAmountComOk() (*string, bool) {
	if o == nil || o.AmountCom == nil {
		return nil, false
	}
	return o.AmountCom, true
}

// HasAmountCom returns a boolean if a field has been set.
func (o *PaymentForm) HasAmountCom() bool {
	if o != nil && o.AmountCom != nil {
		return true
	}

	return false
}

// SetAmountCom gets a reference to the given string and assigns it to the AmountCom field.
func (o *PaymentForm) SetAmountCom(v string) {
	o.AmountCom = &v
}

// GetLanguage returns the Language field value if set, zero value otherwise.
func (o *PaymentForm) GetLanguage() string {
	if o == nil || o.Language == nil {
		var ret string
		return ret
	}
	return *o.Language
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentForm) GetLanguageOk() (*string, bool) {
	if o == nil || o.Language == nil {
		return nil, false
	}
	return o.Language, true
}

// HasLanguage returns a boolean if a field has been set.
func (o *PaymentForm) HasLanguage() bool {
	if o != nil && o.Language != nil {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given string and assigns it to the Language field.
func (o *PaymentForm) SetLanguage(v string) {
	o.Language = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *PaymentForm) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentForm) GetVersionOk() (*string, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *PaymentForm) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *PaymentForm) SetVersion(v string) {
	o.Version = &v
}

// GetStyle returns the Style field value if set, zero value otherwise.
func (o *PaymentForm) GetStyle() string {
	if o == nil || o.Style == nil {
		var ret string
		return ret
	}
	return *o.Style
}

// GetStyleOk returns a tuple with the Style field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentForm) GetStyleOk() (*string, bool) {
	if o == nil || o.Style == nil {
		return nil, false
	}
	return o.Style, true
}

// HasStyle returns a boolean if a field has been set.
func (o *PaymentForm) HasStyle() bool {
	if o != nil && o.Style != nil {
		return true
	}

	return false
}

// SetStyle gets a reference to the given string and assigns it to the Style field.
func (o *PaymentForm) SetStyle(v string) {
	o.Style = &v
}

// GetAtosStyle returns the AtosStyle field value if set, zero value otherwise.
func (o *PaymentForm) GetAtosStyle() string {
	if o == nil || o.AtosStyle == nil {
		var ret string
		return ret
	}
	return *o.AtosStyle
}

// GetAtosStyleOk returns a tuple with the AtosStyle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentForm) GetAtosStyleOk() (*string, bool) {
	if o == nil || o.AtosStyle == nil {
		return nil, false
	}
	return o.AtosStyle, true
}

// HasAtosStyle returns a boolean if a field has been set.
func (o *PaymentForm) HasAtosStyle() bool {
	if o != nil && o.AtosStyle != nil {
		return true
	}

	return false
}

// SetAtosStyle gets a reference to the given string and assigns it to the AtosStyle field.
func (o *PaymentForm) SetAtosStyle(v string) {
	o.AtosStyle = &v
}

// GetNotifUrl returns the NotifUrl field value if set, zero value otherwise.
func (o *PaymentForm) GetNotifUrl() string {
	if o == nil || o.NotifUrl == nil {
		var ret string
		return ret
	}
	return *o.NotifUrl
}

// GetNotifUrlOk returns a tuple with the NotifUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentForm) GetNotifUrlOk() (*string, bool) {
	if o == nil || o.NotifUrl == nil {
		return nil, false
	}
	return o.NotifUrl, true
}

// HasNotifUrl returns a boolean if a field has been set.
func (o *PaymentForm) HasNotifUrl() bool {
	if o != nil && o.NotifUrl != nil {
		return true
	}

	return false
}

// SetNotifUrl gets a reference to the given string and assigns it to the NotifUrl field.
func (o *PaymentForm) SetNotifUrl(v string) {
	o.NotifUrl = &v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *PaymentForm) GetOptions() string {
	if o == nil || o.Options == nil {
		var ret string
		return ret
	}
	return *o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentForm) GetOptionsOk() (*string, bool) {
	if o == nil || o.Options == nil {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *PaymentForm) HasOptions() bool {
	if o != nil && o.Options != nil {
		return true
	}

	return false
}

// SetOptions gets a reference to the given string and assigns it to the Options field.
func (o *PaymentForm) SetOptions(v string) {
	o.Options = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *PaymentForm) GetActive() bool {
	if o == nil || o.Active == nil {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentForm) GetActiveOk() (*bool, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *PaymentForm) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *PaymentForm) SetActive(v bool) {
	o.Active = &v
}

// GetRaisonSociale returns the RaisonSociale field value if set, zero value otherwise.
func (o *PaymentForm) GetRaisonSociale() string {
	if o == nil || o.RaisonSociale == nil {
		var ret string
		return ret
	}
	return *o.RaisonSociale
}

// GetRaisonSocialeOk returns a tuple with the RaisonSociale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentForm) GetRaisonSocialeOk() (*string, bool) {
	if o == nil || o.RaisonSociale == nil {
		return nil, false
	}
	return o.RaisonSociale, true
}

// HasRaisonSociale returns a boolean if a field has been set.
func (o *PaymentForm) HasRaisonSociale() bool {
	if o != nil && o.RaisonSociale != nil {
		return true
	}

	return false
}

// SetRaisonSociale gets a reference to the given string and assigns it to the RaisonSociale field.
func (o *PaymentForm) SetRaisonSociale(v string) {
	o.RaisonSociale = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PaymentForm) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentForm) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PaymentForm) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PaymentForm) SetId(v string) {
	o.Id = &v
}

// GetOptId returns the OptId field value if set, zero value otherwise.
func (o *PaymentForm) GetOptId() string {
	if o == nil || o.OptId == nil {
		var ret string
		return ret
	}
	return *o.OptId
}

// GetOptIdOk returns a tuple with the OptId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentForm) GetOptIdOk() (*string, bool) {
	if o == nil || o.OptId == nil {
		return nil, false
	}
	return o.OptId, true
}

// HasOptId returns a boolean if a field has been set.
func (o *PaymentForm) HasOptId() bool {
	if o != nil && o.OptId != nil {
		return true
	}

	return false
}

// SetOptId gets a reference to the given string and assigns it to the OptId field.
func (o *PaymentForm) SetOptId(v string) {
	o.OptId = &v
}

// GetAccountPayer returns the AccountPayer field value if set, zero value otherwise.
func (o *PaymentForm) GetAccountPayer() string {
	if o == nil || o.AccountPayer == nil {
		var ret string
		return ret
	}
	return *o.AccountPayer
}

// GetAccountPayerOk returns a tuple with the AccountPayer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentForm) GetAccountPayerOk() (*string, bool) {
	if o == nil || o.AccountPayer == nil {
		return nil, false
	}
	return o.AccountPayer, true
}

// HasAccountPayer returns a boolean if a field has been set.
func (o *PaymentForm) HasAccountPayer() bool {
	if o != nil && o.AccountPayer != nil {
		return true
	}

	return false
}

// SetAccountPayer gets a reference to the given string and assigns it to the AccountPayer field.
func (o *PaymentForm) SetAccountPayer(v string) {
	o.AccountPayer = &v
}

// GetAccountReceiver returns the AccountReceiver field value if set, zero value otherwise.
func (o *PaymentForm) GetAccountReceiver() string {
	if o == nil || o.AccountReceiver == nil {
		var ret string
		return ret
	}
	return *o.AccountReceiver
}

// GetAccountReceiverOk returns a tuple with the AccountReceiver field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentForm) GetAccountReceiverOk() (*string, bool) {
	if o == nil || o.AccountReceiver == nil {
		return nil, false
	}
	return o.AccountReceiver, true
}

// HasAccountReceiver returns a boolean if a field has been set.
func (o *PaymentForm) HasAccountReceiver() bool {
	if o != nil && o.AccountReceiver != nil {
		return true
	}

	return false
}

// SetAccountReceiver gets a reference to the given string and assigns it to the AccountReceiver field.
func (o *PaymentForm) SetAccountReceiver(v string) {
	o.AccountReceiver = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *PaymentForm) GetComment() string {
	if o == nil || o.Comment == nil {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentForm) GetCommentOk() (*string, bool) {
	if o == nil || o.Comment == nil {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *PaymentForm) HasComment() bool {
	if o != nil && o.Comment != nil {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *PaymentForm) SetComment(v string) {
	o.Comment = &v
}

// GetReturnUrl returns the ReturnUrl field value if set, zero value otherwise.
func (o *PaymentForm) GetReturnUrl() string {
	if o == nil || o.ReturnUrl == nil {
		var ret string
		return ret
	}
	return *o.ReturnUrl
}

// GetReturnUrlOk returns a tuple with the ReturnUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentForm) GetReturnUrlOk() (*string, bool) {
	if o == nil || o.ReturnUrl == nil {
		return nil, false
	}
	return o.ReturnUrl, true
}

// HasReturnUrl returns a boolean if a field has been set.
func (o *PaymentForm) HasReturnUrl() bool {
	if o != nil && o.ReturnUrl != nil {
		return true
	}

	return false
}

// SetReturnUrl gets a reference to the given string and assigns it to the ReturnUrl field.
func (o *PaymentForm) SetReturnUrl(v string) {
	o.ReturnUrl = &v
}

// GetCancelUrl returns the CancelUrl field value if set, zero value otherwise.
func (o *PaymentForm) GetCancelUrl() string {
	if o == nil || o.CancelUrl == nil {
		var ret string
		return ret
	}
	return *o.CancelUrl
}

// GetCancelUrlOk returns a tuple with the CancelUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentForm) GetCancelUrlOk() (*string, bool) {
	if o == nil || o.CancelUrl == nil {
		return nil, false
	}
	return o.CancelUrl, true
}

// HasCancelUrl returns a boolean if a field has been set.
func (o *PaymentForm) HasCancelUrl() bool {
	if o != nil && o.CancelUrl != nil {
		return true
	}

	return false
}

// SetCancelUrl gets a reference to the given string and assigns it to the CancelUrl field.
func (o *PaymentForm) SetCancelUrl(v string) {
	o.CancelUrl = &v
}

// GetErrorUrl returns the ErrorUrl field value if set, zero value otherwise.
func (o *PaymentForm) GetErrorUrl() string {
	if o == nil || o.ErrorUrl == nil {
		var ret string
		return ret
	}
	return *o.ErrorUrl
}

// GetErrorUrlOk returns a tuple with the ErrorUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentForm) GetErrorUrlOk() (*string, bool) {
	if o == nil || o.ErrorUrl == nil {
		return nil, false
	}
	return o.ErrorUrl, true
}

// HasErrorUrl returns a boolean if a field has been set.
func (o *PaymentForm) HasErrorUrl() bool {
	if o != nil && o.ErrorUrl != nil {
		return true
	}

	return false
}

// SetErrorUrl gets a reference to the given string and assigns it to the ErrorUrl field.
func (o *PaymentForm) SetErrorUrl(v string) {
	o.ErrorUrl = &v
}

// GetFirstNamePayer returns the FirstNamePayer field value if set, zero value otherwise.
func (o *PaymentForm) GetFirstNamePayer() string {
	if o == nil || o.FirstNamePayer == nil {
		var ret string
		return ret
	}
	return *o.FirstNamePayer
}

// GetFirstNamePayerOk returns a tuple with the FirstNamePayer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentForm) GetFirstNamePayerOk() (*string, bool) {
	if o == nil || o.FirstNamePayer == nil {
		return nil, false
	}
	return o.FirstNamePayer, true
}

// HasFirstNamePayer returns a boolean if a field has been set.
func (o *PaymentForm) HasFirstNamePayer() bool {
	if o != nil && o.FirstNamePayer != nil {
		return true
	}

	return false
}

// SetFirstNamePayer gets a reference to the given string and assigns it to the FirstNamePayer field.
func (o *PaymentForm) SetFirstNamePayer(v string) {
	o.FirstNamePayer = &v
}

// GetLastNamePayer returns the LastNamePayer field value if set, zero value otherwise.
func (o *PaymentForm) GetLastNamePayer() string {
	if o == nil || o.LastNamePayer == nil {
		var ret string
		return ret
	}
	return *o.LastNamePayer
}

// GetLastNamePayerOk returns a tuple with the LastNamePayer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentForm) GetLastNamePayerOk() (*string, bool) {
	if o == nil || o.LastNamePayer == nil {
		return nil, false
	}
	return o.LastNamePayer, true
}

// HasLastNamePayer returns a boolean if a field has been set.
func (o *PaymentForm) HasLastNamePayer() bool {
	if o != nil && o.LastNamePayer != nil {
		return true
	}

	return false
}

// SetLastNamePayer gets a reference to the given string and assigns it to the LastNamePayer field.
func (o *PaymentForm) SetLastNamePayer(v string) {
	o.LastNamePayer = &v
}

// GetEmailPayer returns the EmailPayer field value if set, zero value otherwise.
func (o *PaymentForm) GetEmailPayer() string {
	if o == nil || o.EmailPayer == nil {
		var ret string
		return ret
	}
	return *o.EmailPayer
}

// GetEmailPayerOk returns a tuple with the EmailPayer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentForm) GetEmailPayerOk() (*string, bool) {
	if o == nil || o.EmailPayer == nil {
		return nil, false
	}
	return o.EmailPayer, true
}

// HasEmailPayer returns a boolean if a field has been set.
func (o *PaymentForm) HasEmailPayer() bool {
	if o != nil && o.EmailPayer != nil {
		return true
	}

	return false
}

// SetEmailPayer gets a reference to the given string and assigns it to the EmailPayer field.
func (o *PaymentForm) SetEmailPayer(v string) {
	o.EmailPayer = &v
}

func (o PaymentForm) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.WalletIp != nil {
		toSerialize["walletIp"] = o.WalletIp
	}
	if o.WalletUa != nil {
		toSerialize["walletUa"] = o.WalletUa
	}
	if o.AmountTotRange != nil {
		toSerialize["amountTotRange"] = o.AmountTotRange
	}
	if o.AmountCom != nil {
		toSerialize["amountCom"] = o.AmountCom
	}
	if o.Language != nil {
		toSerialize["language"] = o.Language
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	if o.Style != nil {
		toSerialize["style"] = o.Style
	}
	if o.AtosStyle != nil {
		toSerialize["atosStyle"] = o.AtosStyle
	}
	if o.NotifUrl != nil {
		toSerialize["notifUrl"] = o.NotifUrl
	}
	if o.Options != nil {
		toSerialize["options"] = o.Options
	}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	if o.RaisonSociale != nil {
		toSerialize["raisonSociale"] = o.RaisonSociale
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.OptId != nil {
		toSerialize["optId"] = o.OptId
	}
	if o.AccountPayer != nil {
		toSerialize["accountPayer"] = o.AccountPayer
	}
	if o.AccountReceiver != nil {
		toSerialize["accountReceiver"] = o.AccountReceiver
	}
	if o.Comment != nil {
		toSerialize["comment"] = o.Comment
	}
	if o.ReturnUrl != nil {
		toSerialize["returnUrl"] = o.ReturnUrl
	}
	if o.CancelUrl != nil {
		toSerialize["cancelUrl"] = o.CancelUrl
	}
	if o.ErrorUrl != nil {
		toSerialize["errorUrl"] = o.ErrorUrl
	}
	if o.FirstNamePayer != nil {
		toSerialize["firstNamePayer"] = o.FirstNamePayer
	}
	if o.LastNamePayer != nil {
		toSerialize["lastNamePayer"] = o.LastNamePayer
	}
	if o.EmailPayer != nil {
		toSerialize["emailPayer"] = o.EmailPayer
	}
	return json.Marshal(toSerialize)
}

type NullablePaymentForm struct {
	value *PaymentForm
	isSet bool
}

func (v NullablePaymentForm) Get() *PaymentForm {
	return v.value
}

func (v *NullablePaymentForm) Set(val *PaymentForm) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentForm) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentForm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentForm(val *PaymentForm) *NullablePaymentForm {
	return &NullablePaymentForm{value: val, isSet: true}
}

func (v NullablePaymentForm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentForm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


