/*
Lemonway DirectKit API 2.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// WalletDetailsInput struct for WalletDetailsInput
type WalletDetailsInput struct {
	Accountid *string `json:"accountid,omitempty"`
	Email *string `json:"email,omitempty"`
}

// NewWalletDetailsInput instantiates a new WalletDetailsInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWalletDetailsInput() *WalletDetailsInput {
	this := WalletDetailsInput{}
	return &this
}

// NewWalletDetailsInputWithDefaults instantiates a new WalletDetailsInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWalletDetailsInputWithDefaults() *WalletDetailsInput {
	this := WalletDetailsInput{}
	return &this
}

// GetAccountid returns the Accountid field value if set, zero value otherwise.
func (o *WalletDetailsInput) GetAccountid() string {
	if o == nil || o.Accountid == nil {
		var ret string
		return ret
	}
	return *o.Accountid
}

// GetAccountidOk returns a tuple with the Accountid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletDetailsInput) GetAccountidOk() (*string, bool) {
	if o == nil || o.Accountid == nil {
		return nil, false
	}
	return o.Accountid, true
}

// HasAccountid returns a boolean if a field has been set.
func (o *WalletDetailsInput) HasAccountid() bool {
	if o != nil && o.Accountid != nil {
		return true
	}

	return false
}

// SetAccountid gets a reference to the given string and assigns it to the Accountid field.
func (o *WalletDetailsInput) SetAccountid(v string) {
	o.Accountid = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *WalletDetailsInput) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletDetailsInput) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *WalletDetailsInput) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *WalletDetailsInput) SetEmail(v string) {
	o.Email = &v
}

func (o WalletDetailsInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Accountid != nil {
		toSerialize["accountid"] = o.Accountid
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	return json.Marshal(toSerialize)
}

type NullableWalletDetailsInput struct {
	value *WalletDetailsInput
	isSet bool
}

func (v NullableWalletDetailsInput) Get() *WalletDetailsInput {
	return v.value
}

func (v *NullableWalletDetailsInput) Set(val *WalletDetailsInput) {
	v.value = val
	v.isSet = true
}

func (v NullableWalletDetailsInput) IsSet() bool {
	return v.isSet
}

func (v *NullableWalletDetailsInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWalletDetailsInput(val *WalletDetailsInput) *NullableWalletDetailsInput {
	return &NullableWalletDetailsInput{value: val, isSet: true}
}

func (v NullableWalletDetailsInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWalletDetailsInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


