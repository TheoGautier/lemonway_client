/*
Lemonway DirectKit API 2.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MoneyIn3DAuthenticateInput struct for MoneyIn3DAuthenticateInput
type MoneyIn3DAuthenticateInput struct {
	Card *CardInfo `json:"card,omitempty"`
	// MD Data Returned by 3-D Secure Site
	Md *string `json:"md,omitempty"`
	// Pares Data Returned by 3-D Secure Authentication Website
	Pares *string `json:"pares,omitempty"`
	// Leave Empty
	SpecialConfig *string `json:"specialConfig,omitempty"`
}

// NewMoneyIn3DAuthenticateInput instantiates a new MoneyIn3DAuthenticateInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMoneyIn3DAuthenticateInput() *MoneyIn3DAuthenticateInput {
	this := MoneyIn3DAuthenticateInput{}
	return &this
}

// NewMoneyIn3DAuthenticateInputWithDefaults instantiates a new MoneyIn3DAuthenticateInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMoneyIn3DAuthenticateInputWithDefaults() *MoneyIn3DAuthenticateInput {
	this := MoneyIn3DAuthenticateInput{}
	return &this
}

// GetCard returns the Card field value if set, zero value otherwise.
func (o *MoneyIn3DAuthenticateInput) GetCard() CardInfo {
	if o == nil || o.Card == nil {
		var ret CardInfo
		return ret
	}
	return *o.Card
}

// GetCardOk returns a tuple with the Card field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoneyIn3DAuthenticateInput) GetCardOk() (*CardInfo, bool) {
	if o == nil || o.Card == nil {
		return nil, false
	}
	return o.Card, true
}

// HasCard returns a boolean if a field has been set.
func (o *MoneyIn3DAuthenticateInput) HasCard() bool {
	if o != nil && o.Card != nil {
		return true
	}

	return false
}

// SetCard gets a reference to the given CardInfo and assigns it to the Card field.
func (o *MoneyIn3DAuthenticateInput) SetCard(v CardInfo) {
	o.Card = &v
}

// GetMd returns the Md field value if set, zero value otherwise.
func (o *MoneyIn3DAuthenticateInput) GetMd() string {
	if o == nil || o.Md == nil {
		var ret string
		return ret
	}
	return *o.Md
}

// GetMdOk returns a tuple with the Md field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoneyIn3DAuthenticateInput) GetMdOk() (*string, bool) {
	if o == nil || o.Md == nil {
		return nil, false
	}
	return o.Md, true
}

// HasMd returns a boolean if a field has been set.
func (o *MoneyIn3DAuthenticateInput) HasMd() bool {
	if o != nil && o.Md != nil {
		return true
	}

	return false
}

// SetMd gets a reference to the given string and assigns it to the Md field.
func (o *MoneyIn3DAuthenticateInput) SetMd(v string) {
	o.Md = &v
}

// GetPares returns the Pares field value if set, zero value otherwise.
func (o *MoneyIn3DAuthenticateInput) GetPares() string {
	if o == nil || o.Pares == nil {
		var ret string
		return ret
	}
	return *o.Pares
}

// GetParesOk returns a tuple with the Pares field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoneyIn3DAuthenticateInput) GetParesOk() (*string, bool) {
	if o == nil || o.Pares == nil {
		return nil, false
	}
	return o.Pares, true
}

// HasPares returns a boolean if a field has been set.
func (o *MoneyIn3DAuthenticateInput) HasPares() bool {
	if o != nil && o.Pares != nil {
		return true
	}

	return false
}

// SetPares gets a reference to the given string and assigns it to the Pares field.
func (o *MoneyIn3DAuthenticateInput) SetPares(v string) {
	o.Pares = &v
}

// GetSpecialConfig returns the SpecialConfig field value if set, zero value otherwise.
func (o *MoneyIn3DAuthenticateInput) GetSpecialConfig() string {
	if o == nil || o.SpecialConfig == nil {
		var ret string
		return ret
	}
	return *o.SpecialConfig
}

// GetSpecialConfigOk returns a tuple with the SpecialConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoneyIn3DAuthenticateInput) GetSpecialConfigOk() (*string, bool) {
	if o == nil || o.SpecialConfig == nil {
		return nil, false
	}
	return o.SpecialConfig, true
}

// HasSpecialConfig returns a boolean if a field has been set.
func (o *MoneyIn3DAuthenticateInput) HasSpecialConfig() bool {
	if o != nil && o.SpecialConfig != nil {
		return true
	}

	return false
}

// SetSpecialConfig gets a reference to the given string and assigns it to the SpecialConfig field.
func (o *MoneyIn3DAuthenticateInput) SetSpecialConfig(v string) {
	o.SpecialConfig = &v
}

func (o MoneyIn3DAuthenticateInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Card != nil {
		toSerialize["card"] = o.Card
	}
	if o.Md != nil {
		toSerialize["md"] = o.Md
	}
	if o.Pares != nil {
		toSerialize["pares"] = o.Pares
	}
	if o.SpecialConfig != nil {
		toSerialize["specialConfig"] = o.SpecialConfig
	}
	return json.Marshal(toSerialize)
}

type NullableMoneyIn3DAuthenticateInput struct {
	value *MoneyIn3DAuthenticateInput
	isSet bool
}

func (v NullableMoneyIn3DAuthenticateInput) Get() *MoneyIn3DAuthenticateInput {
	return v.value
}

func (v *NullableMoneyIn3DAuthenticateInput) Set(val *MoneyIn3DAuthenticateInput) {
	v.value = val
	v.isSet = true
}

func (v NullableMoneyIn3DAuthenticateInput) IsSet() bool {
	return v.isSet
}

func (v *NullableMoneyIn3DAuthenticateInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMoneyIn3DAuthenticateInput(val *MoneyIn3DAuthenticateInput) *NullableMoneyIn3DAuthenticateInput {
	return &NullableMoneyIn3DAuthenticateInput{value: val, isSet: true}
}

func (v NullableMoneyIn3DAuthenticateInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMoneyIn3DAuthenticateInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


