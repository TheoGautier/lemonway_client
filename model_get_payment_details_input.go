/*
Lemonway DirectKit API 2.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetPaymentDetailsInput 
type GetPaymentDetailsInput struct {
	// Transaction ID
	TransactionId *int64 `json:"transactionId,omitempty"`
	// Transaction Comment
	TransactionComment *string `json:"transactionComment,omitempty"`
	// Unique ID generated by your server
	Reference *string `json:"reference,omitempty"`
	PrivateData *PrivateData `json:"privateData,omitempty"`
}

// NewGetPaymentDetailsInput instantiates a new GetPaymentDetailsInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetPaymentDetailsInput() *GetPaymentDetailsInput {
	this := GetPaymentDetailsInput{}
	return &this
}

// NewGetPaymentDetailsInputWithDefaults instantiates a new GetPaymentDetailsInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetPaymentDetailsInputWithDefaults() *GetPaymentDetailsInput {
	this := GetPaymentDetailsInput{}
	return &this
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise.
func (o *GetPaymentDetailsInput) GetTransactionId() int64 {
	if o == nil || o.TransactionId == nil {
		var ret int64
		return ret
	}
	return *o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPaymentDetailsInput) GetTransactionIdOk() (*int64, bool) {
	if o == nil || o.TransactionId == nil {
		return nil, false
	}
	return o.TransactionId, true
}

// HasTransactionId returns a boolean if a field has been set.
func (o *GetPaymentDetailsInput) HasTransactionId() bool {
	if o != nil && o.TransactionId != nil {
		return true
	}

	return false
}

// SetTransactionId gets a reference to the given int64 and assigns it to the TransactionId field.
func (o *GetPaymentDetailsInput) SetTransactionId(v int64) {
	o.TransactionId = &v
}

// GetTransactionComment returns the TransactionComment field value if set, zero value otherwise.
func (o *GetPaymentDetailsInput) GetTransactionComment() string {
	if o == nil || o.TransactionComment == nil {
		var ret string
		return ret
	}
	return *o.TransactionComment
}

// GetTransactionCommentOk returns a tuple with the TransactionComment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPaymentDetailsInput) GetTransactionCommentOk() (*string, bool) {
	if o == nil || o.TransactionComment == nil {
		return nil, false
	}
	return o.TransactionComment, true
}

// HasTransactionComment returns a boolean if a field has been set.
func (o *GetPaymentDetailsInput) HasTransactionComment() bool {
	if o != nil && o.TransactionComment != nil {
		return true
	}

	return false
}

// SetTransactionComment gets a reference to the given string and assigns it to the TransactionComment field.
func (o *GetPaymentDetailsInput) SetTransactionComment(v string) {
	o.TransactionComment = &v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *GetPaymentDetailsInput) GetReference() string {
	if o == nil || o.Reference == nil {
		var ret string
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPaymentDetailsInput) GetReferenceOk() (*string, bool) {
	if o == nil || o.Reference == nil {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *GetPaymentDetailsInput) HasReference() bool {
	if o != nil && o.Reference != nil {
		return true
	}

	return false
}

// SetReference gets a reference to the given string and assigns it to the Reference field.
func (o *GetPaymentDetailsInput) SetReference(v string) {
	o.Reference = &v
}

// GetPrivateData returns the PrivateData field value if set, zero value otherwise.
func (o *GetPaymentDetailsInput) GetPrivateData() PrivateData {
	if o == nil || o.PrivateData == nil {
		var ret PrivateData
		return ret
	}
	return *o.PrivateData
}

// GetPrivateDataOk returns a tuple with the PrivateData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPaymentDetailsInput) GetPrivateDataOk() (*PrivateData, bool) {
	if o == nil || o.PrivateData == nil {
		return nil, false
	}
	return o.PrivateData, true
}

// HasPrivateData returns a boolean if a field has been set.
func (o *GetPaymentDetailsInput) HasPrivateData() bool {
	if o != nil && o.PrivateData != nil {
		return true
	}

	return false
}

// SetPrivateData gets a reference to the given PrivateData and assigns it to the PrivateData field.
func (o *GetPaymentDetailsInput) SetPrivateData(v PrivateData) {
	o.PrivateData = &v
}

func (o GetPaymentDetailsInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TransactionId != nil {
		toSerialize["transactionId"] = o.TransactionId
	}
	if o.TransactionComment != nil {
		toSerialize["transactionComment"] = o.TransactionComment
	}
	if o.Reference != nil {
		toSerialize["reference"] = o.Reference
	}
	if o.PrivateData != nil {
		toSerialize["privateData"] = o.PrivateData
	}
	return json.Marshal(toSerialize)
}

type NullableGetPaymentDetailsInput struct {
	value *GetPaymentDetailsInput
	isSet bool
}

func (v NullableGetPaymentDetailsInput) Get() *GetPaymentDetailsInput {
	return v.value
}

func (v *NullableGetPaymentDetailsInput) Set(val *GetPaymentDetailsInput) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPaymentDetailsInput) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPaymentDetailsInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPaymentDetailsInput(val *GetPaymentDetailsInput) *NullableGetPaymentDetailsInput {
	return &NullableGetPaymentDetailsInput{value: val, isSet: true}
}

func (v NullableGetPaymentDetailsInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPaymentDetailsInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


