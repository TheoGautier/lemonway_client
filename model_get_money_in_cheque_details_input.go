/*
Lemonway DirectKit API 2.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetMoneyInChequeDetailsInput struct for GetMoneyInChequeDetailsInput
type GetMoneyInChequeDetailsInput struct {
	UpdateDate *string `json:"updateDate,omitempty"`
	// End Date UTC Unix Timestamp
	UpdateEndDate *string `json:"updateEndDate,omitempty"`
	// Cheque Payment (by default) or Pagaré:<br/>15 = Cheque payment.<br/>23 = Pagaré.<br/>
	ChequeType *int32 `json:"chequeType,omitempty"`
	// Unique ID generated by your server
	Reference *string `json:"reference,omitempty"`
}

// NewGetMoneyInChequeDetailsInput instantiates a new GetMoneyInChequeDetailsInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetMoneyInChequeDetailsInput() *GetMoneyInChequeDetailsInput {
	this := GetMoneyInChequeDetailsInput{}
	return &this
}

// NewGetMoneyInChequeDetailsInputWithDefaults instantiates a new GetMoneyInChequeDetailsInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetMoneyInChequeDetailsInputWithDefaults() *GetMoneyInChequeDetailsInput {
	this := GetMoneyInChequeDetailsInput{}
	return &this
}

// GetUpdateDate returns the UpdateDate field value if set, zero value otherwise.
func (o *GetMoneyInChequeDetailsInput) GetUpdateDate() string {
	if o == nil || o.UpdateDate == nil {
		var ret string
		return ret
	}
	return *o.UpdateDate
}

// GetUpdateDateOk returns a tuple with the UpdateDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMoneyInChequeDetailsInput) GetUpdateDateOk() (*string, bool) {
	if o == nil || o.UpdateDate == nil {
		return nil, false
	}
	return o.UpdateDate, true
}

// HasUpdateDate returns a boolean if a field has been set.
func (o *GetMoneyInChequeDetailsInput) HasUpdateDate() bool {
	if o != nil && o.UpdateDate != nil {
		return true
	}

	return false
}

// SetUpdateDate gets a reference to the given string and assigns it to the UpdateDate field.
func (o *GetMoneyInChequeDetailsInput) SetUpdateDate(v string) {
	o.UpdateDate = &v
}

// GetUpdateEndDate returns the UpdateEndDate field value if set, zero value otherwise.
func (o *GetMoneyInChequeDetailsInput) GetUpdateEndDate() string {
	if o == nil || o.UpdateEndDate == nil {
		var ret string
		return ret
	}
	return *o.UpdateEndDate
}

// GetUpdateEndDateOk returns a tuple with the UpdateEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMoneyInChequeDetailsInput) GetUpdateEndDateOk() (*string, bool) {
	if o == nil || o.UpdateEndDate == nil {
		return nil, false
	}
	return o.UpdateEndDate, true
}

// HasUpdateEndDate returns a boolean if a field has been set.
func (o *GetMoneyInChequeDetailsInput) HasUpdateEndDate() bool {
	if o != nil && o.UpdateEndDate != nil {
		return true
	}

	return false
}

// SetUpdateEndDate gets a reference to the given string and assigns it to the UpdateEndDate field.
func (o *GetMoneyInChequeDetailsInput) SetUpdateEndDate(v string) {
	o.UpdateEndDate = &v
}

// GetChequeType returns the ChequeType field value if set, zero value otherwise.
func (o *GetMoneyInChequeDetailsInput) GetChequeType() int32 {
	if o == nil || o.ChequeType == nil {
		var ret int32
		return ret
	}
	return *o.ChequeType
}

// GetChequeTypeOk returns a tuple with the ChequeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMoneyInChequeDetailsInput) GetChequeTypeOk() (*int32, bool) {
	if o == nil || o.ChequeType == nil {
		return nil, false
	}
	return o.ChequeType, true
}

// HasChequeType returns a boolean if a field has been set.
func (o *GetMoneyInChequeDetailsInput) HasChequeType() bool {
	if o != nil && o.ChequeType != nil {
		return true
	}

	return false
}

// SetChequeType gets a reference to the given int32 and assigns it to the ChequeType field.
func (o *GetMoneyInChequeDetailsInput) SetChequeType(v int32) {
	o.ChequeType = &v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *GetMoneyInChequeDetailsInput) GetReference() string {
	if o == nil || o.Reference == nil {
		var ret string
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMoneyInChequeDetailsInput) GetReferenceOk() (*string, bool) {
	if o == nil || o.Reference == nil {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *GetMoneyInChequeDetailsInput) HasReference() bool {
	if o != nil && o.Reference != nil {
		return true
	}

	return false
}

// SetReference gets a reference to the given string and assigns it to the Reference field.
func (o *GetMoneyInChequeDetailsInput) SetReference(v string) {
	o.Reference = &v
}

func (o GetMoneyInChequeDetailsInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.UpdateDate != nil {
		toSerialize["updateDate"] = o.UpdateDate
	}
	if o.UpdateEndDate != nil {
		toSerialize["updateEndDate"] = o.UpdateEndDate
	}
	if o.ChequeType != nil {
		toSerialize["chequeType"] = o.ChequeType
	}
	if o.Reference != nil {
		toSerialize["reference"] = o.Reference
	}
	return json.Marshal(toSerialize)
}

type NullableGetMoneyInChequeDetailsInput struct {
	value *GetMoneyInChequeDetailsInput
	isSet bool
}

func (v NullableGetMoneyInChequeDetailsInput) Get() *GetMoneyInChequeDetailsInput {
	return v.value
}

func (v *NullableGetMoneyInChequeDetailsInput) Set(val *GetMoneyInChequeDetailsInput) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMoneyInChequeDetailsInput) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMoneyInChequeDetailsInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMoneyInChequeDetailsInput(val *GetMoneyInChequeDetailsInput) *NullableGetMoneyInChequeDetailsInput {
	return &NullableGetMoneyInChequeDetailsInput{value: val, isSet: true}
}

func (v NullableGetMoneyInChequeDetailsInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMoneyInChequeDetailsInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


