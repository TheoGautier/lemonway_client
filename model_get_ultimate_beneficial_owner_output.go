/*
Lemonway DirectKit API 2.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetUltimateBeneficialOwnerOutput struct for GetUltimateBeneficialOwnerOutput
type GetUltimateBeneficialOwnerOutput struct {
	UltimateBeneficialOwners []UltimateBeneficialOwner `json:"ultimateBeneficialOwners,omitempty"`
	Error *Error `json:"error,omitempty"`
}

// NewGetUltimateBeneficialOwnerOutput instantiates a new GetUltimateBeneficialOwnerOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetUltimateBeneficialOwnerOutput() *GetUltimateBeneficialOwnerOutput {
	this := GetUltimateBeneficialOwnerOutput{}
	return &this
}

// NewGetUltimateBeneficialOwnerOutputWithDefaults instantiates a new GetUltimateBeneficialOwnerOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetUltimateBeneficialOwnerOutputWithDefaults() *GetUltimateBeneficialOwnerOutput {
	this := GetUltimateBeneficialOwnerOutput{}
	return &this
}

// GetUltimateBeneficialOwners returns the UltimateBeneficialOwners field value if set, zero value otherwise.
func (o *GetUltimateBeneficialOwnerOutput) GetUltimateBeneficialOwners() []UltimateBeneficialOwner {
	if o == nil || o.UltimateBeneficialOwners == nil {
		var ret []UltimateBeneficialOwner
		return ret
	}
	return o.UltimateBeneficialOwners
}

// GetUltimateBeneficialOwnersOk returns a tuple with the UltimateBeneficialOwners field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUltimateBeneficialOwnerOutput) GetUltimateBeneficialOwnersOk() ([]UltimateBeneficialOwner, bool) {
	if o == nil || o.UltimateBeneficialOwners == nil {
		return nil, false
	}
	return o.UltimateBeneficialOwners, true
}

// HasUltimateBeneficialOwners returns a boolean if a field has been set.
func (o *GetUltimateBeneficialOwnerOutput) HasUltimateBeneficialOwners() bool {
	if o != nil && o.UltimateBeneficialOwners != nil {
		return true
	}

	return false
}

// SetUltimateBeneficialOwners gets a reference to the given []UltimateBeneficialOwner and assigns it to the UltimateBeneficialOwners field.
func (o *GetUltimateBeneficialOwnerOutput) SetUltimateBeneficialOwners(v []UltimateBeneficialOwner) {
	o.UltimateBeneficialOwners = v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *GetUltimateBeneficialOwnerOutput) GetError() Error {
	if o == nil || o.Error == nil {
		var ret Error
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUltimateBeneficialOwnerOutput) GetErrorOk() (*Error, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *GetUltimateBeneficialOwnerOutput) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given Error and assigns it to the Error field.
func (o *GetUltimateBeneficialOwnerOutput) SetError(v Error) {
	o.Error = &v
}

func (o GetUltimateBeneficialOwnerOutput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.UltimateBeneficialOwners != nil {
		toSerialize["ultimateBeneficialOwners"] = o.UltimateBeneficialOwners
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullableGetUltimateBeneficialOwnerOutput struct {
	value *GetUltimateBeneficialOwnerOutput
	isSet bool
}

func (v NullableGetUltimateBeneficialOwnerOutput) Get() *GetUltimateBeneficialOwnerOutput {
	return v.value
}

func (v *NullableGetUltimateBeneficialOwnerOutput) Set(val *GetUltimateBeneficialOwnerOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableGetUltimateBeneficialOwnerOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableGetUltimateBeneficialOwnerOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetUltimateBeneficialOwnerOutput(val *GetUltimateBeneficialOwnerOutput) *NullableGetUltimateBeneficialOwnerOutput {
	return &NullableGetUltimateBeneficialOwnerOutput{value: val, isSet: true}
}

func (v NullableGetUltimateBeneficialOwnerOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetUltimateBeneficialOwnerOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


