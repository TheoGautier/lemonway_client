/*
Lemonway DirectKit API 2.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BankBranchAddress struct for BankBranchAddress
type BankBranchAddress struct {
	// Number and Street
	Street string `json:"Street"`
	// Postal or Zip Code
	ZipCode string `json:"ZipCode"`
	// City
	City string `json:"City"`
}

// NewBankBranchAddress instantiates a new BankBranchAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBankBranchAddress(street string, zipCode string, city string) *BankBranchAddress {
	this := BankBranchAddress{}
	this.Street = street
	this.ZipCode = zipCode
	this.City = city
	return &this
}

// NewBankBranchAddressWithDefaults instantiates a new BankBranchAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBankBranchAddressWithDefaults() *BankBranchAddress {
	this := BankBranchAddress{}
	return &this
}

// GetStreet returns the Street field value
func (o *BankBranchAddress) GetStreet() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Street
}

// GetStreetOk returns a tuple with the Street field value
// and a boolean to check if the value has been set.
func (o *BankBranchAddress) GetStreetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Street, true
}

// SetStreet sets field value
func (o *BankBranchAddress) SetStreet(v string) {
	o.Street = v
}

// GetZipCode returns the ZipCode field value
func (o *BankBranchAddress) GetZipCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ZipCode
}

// GetZipCodeOk returns a tuple with the ZipCode field value
// and a boolean to check if the value has been set.
func (o *BankBranchAddress) GetZipCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ZipCode, true
}

// SetZipCode sets field value
func (o *BankBranchAddress) SetZipCode(v string) {
	o.ZipCode = v
}

// GetCity returns the City field value
func (o *BankBranchAddress) GetCity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.City
}

// GetCityOk returns a tuple with the City field value
// and a boolean to check if the value has been set.
func (o *BankBranchAddress) GetCityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.City, true
}

// SetCity sets field value
func (o *BankBranchAddress) SetCity(v string) {
	o.City = v
}

func (o BankBranchAddress) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["Street"] = o.Street
	}
	if true {
		toSerialize["ZipCode"] = o.ZipCode
	}
	if true {
		toSerialize["City"] = o.City
	}
	return json.Marshal(toSerialize)
}

type NullableBankBranchAddress struct {
	value *BankBranchAddress
	isSet bool
}

func (v NullableBankBranchAddress) Get() *BankBranchAddress {
	return v.value
}

func (v *NullableBankBranchAddress) Set(val *BankBranchAddress) {
	v.value = val
	v.isSet = true
}

func (v NullableBankBranchAddress) IsSet() bool {
	return v.isSet
}

func (v *NullableBankBranchAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBankBranchAddress(val *BankBranchAddress) *NullableBankBranchAddress {
	return &NullableBankBranchAddress{value: val, isSet: true}
}

func (v NullableBankBranchAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBankBranchAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


