/*
Lemonway DirectKit API 2.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DeliveryAddress struct for DeliveryAddress
type DeliveryAddress struct {
	// Client City
	City *string `json:"city,omitempty"`
	// Client country using ISO 3166-1 alpha-3
	Country *string `json:"Country,omitempty"`
	// Client Number and Street
	AddressAdditional1 *string `json:"addressAdditional1,omitempty"`
	// Client Number and Street
	AddressAdditional2 *string `json:"addressAdditional2,omitempty"`
	// Client Number and Street
	AddressAdditional3 *string `json:"addressAdditional3,omitempty"`
	// Client Postal Code/ZIP
	ZipCode *string `json:"zipCode,omitempty"`
	// Client State
	State *string `json:"state,omitempty"`
}

// NewDeliveryAddress instantiates a new DeliveryAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeliveryAddress() *DeliveryAddress {
	this := DeliveryAddress{}
	return &this
}

// NewDeliveryAddressWithDefaults instantiates a new DeliveryAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeliveryAddressWithDefaults() *DeliveryAddress {
	this := DeliveryAddress{}
	return &this
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *DeliveryAddress) GetCity() string {
	if o == nil || o.City == nil {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryAddress) GetCityOk() (*string, bool) {
	if o == nil || o.City == nil {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *DeliveryAddress) HasCity() bool {
	if o != nil && o.City != nil {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *DeliveryAddress) SetCity(v string) {
	o.City = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *DeliveryAddress) GetCountry() string {
	if o == nil || o.Country == nil {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryAddress) GetCountryOk() (*string, bool) {
	if o == nil || o.Country == nil {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *DeliveryAddress) HasCountry() bool {
	if o != nil && o.Country != nil {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *DeliveryAddress) SetCountry(v string) {
	o.Country = &v
}

// GetAddressAdditional1 returns the AddressAdditional1 field value if set, zero value otherwise.
func (o *DeliveryAddress) GetAddressAdditional1() string {
	if o == nil || o.AddressAdditional1 == nil {
		var ret string
		return ret
	}
	return *o.AddressAdditional1
}

// GetAddressAdditional1Ok returns a tuple with the AddressAdditional1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryAddress) GetAddressAdditional1Ok() (*string, bool) {
	if o == nil || o.AddressAdditional1 == nil {
		return nil, false
	}
	return o.AddressAdditional1, true
}

// HasAddressAdditional1 returns a boolean if a field has been set.
func (o *DeliveryAddress) HasAddressAdditional1() bool {
	if o != nil && o.AddressAdditional1 != nil {
		return true
	}

	return false
}

// SetAddressAdditional1 gets a reference to the given string and assigns it to the AddressAdditional1 field.
func (o *DeliveryAddress) SetAddressAdditional1(v string) {
	o.AddressAdditional1 = &v
}

// GetAddressAdditional2 returns the AddressAdditional2 field value if set, zero value otherwise.
func (o *DeliveryAddress) GetAddressAdditional2() string {
	if o == nil || o.AddressAdditional2 == nil {
		var ret string
		return ret
	}
	return *o.AddressAdditional2
}

// GetAddressAdditional2Ok returns a tuple with the AddressAdditional2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryAddress) GetAddressAdditional2Ok() (*string, bool) {
	if o == nil || o.AddressAdditional2 == nil {
		return nil, false
	}
	return o.AddressAdditional2, true
}

// HasAddressAdditional2 returns a boolean if a field has been set.
func (o *DeliveryAddress) HasAddressAdditional2() bool {
	if o != nil && o.AddressAdditional2 != nil {
		return true
	}

	return false
}

// SetAddressAdditional2 gets a reference to the given string and assigns it to the AddressAdditional2 field.
func (o *DeliveryAddress) SetAddressAdditional2(v string) {
	o.AddressAdditional2 = &v
}

// GetAddressAdditional3 returns the AddressAdditional3 field value if set, zero value otherwise.
func (o *DeliveryAddress) GetAddressAdditional3() string {
	if o == nil || o.AddressAdditional3 == nil {
		var ret string
		return ret
	}
	return *o.AddressAdditional3
}

// GetAddressAdditional3Ok returns a tuple with the AddressAdditional3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryAddress) GetAddressAdditional3Ok() (*string, bool) {
	if o == nil || o.AddressAdditional3 == nil {
		return nil, false
	}
	return o.AddressAdditional3, true
}

// HasAddressAdditional3 returns a boolean if a field has been set.
func (o *DeliveryAddress) HasAddressAdditional3() bool {
	if o != nil && o.AddressAdditional3 != nil {
		return true
	}

	return false
}

// SetAddressAdditional3 gets a reference to the given string and assigns it to the AddressAdditional3 field.
func (o *DeliveryAddress) SetAddressAdditional3(v string) {
	o.AddressAdditional3 = &v
}

// GetZipCode returns the ZipCode field value if set, zero value otherwise.
func (o *DeliveryAddress) GetZipCode() string {
	if o == nil || o.ZipCode == nil {
		var ret string
		return ret
	}
	return *o.ZipCode
}

// GetZipCodeOk returns a tuple with the ZipCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryAddress) GetZipCodeOk() (*string, bool) {
	if o == nil || o.ZipCode == nil {
		return nil, false
	}
	return o.ZipCode, true
}

// HasZipCode returns a boolean if a field has been set.
func (o *DeliveryAddress) HasZipCode() bool {
	if o != nil && o.ZipCode != nil {
		return true
	}

	return false
}

// SetZipCode gets a reference to the given string and assigns it to the ZipCode field.
func (o *DeliveryAddress) SetZipCode(v string) {
	o.ZipCode = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *DeliveryAddress) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryAddress) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *DeliveryAddress) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *DeliveryAddress) SetState(v string) {
	o.State = &v
}

func (o DeliveryAddress) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.City != nil {
		toSerialize["city"] = o.City
	}
	if o.Country != nil {
		toSerialize["Country"] = o.Country
	}
	if o.AddressAdditional1 != nil {
		toSerialize["addressAdditional1"] = o.AddressAdditional1
	}
	if o.AddressAdditional2 != nil {
		toSerialize["addressAdditional2"] = o.AddressAdditional2
	}
	if o.AddressAdditional3 != nil {
		toSerialize["addressAdditional3"] = o.AddressAdditional3
	}
	if o.ZipCode != nil {
		toSerialize["zipCode"] = o.ZipCode
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	return json.Marshal(toSerialize)
}

type NullableDeliveryAddress struct {
	value *DeliveryAddress
	isSet bool
}

func (v NullableDeliveryAddress) Get() *DeliveryAddress {
	return v.value
}

func (v *NullableDeliveryAddress) Set(val *DeliveryAddress) {
	v.value = val
	v.isSet = true
}

func (v NullableDeliveryAddress) IsSet() bool {
	return v.isSet
}

func (v *NullableDeliveryAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeliveryAddress(val *DeliveryAddress) *NullableDeliveryAddress {
	return &NullableDeliveryAddress{value: val, isSet: true}
}

func (v NullableDeliveryAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeliveryAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


