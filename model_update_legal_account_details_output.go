/*
Lemonway DirectKit API 2.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UpdateLegalAccountDetailsOutput struct for UpdateLegalAccountDetailsOutput
type UpdateLegalAccountDetailsOutput struct {
	Account *LegalAccount `json:"account,omitempty"`
	Error *Error `json:"error,omitempty"`
}

// NewUpdateLegalAccountDetailsOutput instantiates a new UpdateLegalAccountDetailsOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateLegalAccountDetailsOutput() *UpdateLegalAccountDetailsOutput {
	this := UpdateLegalAccountDetailsOutput{}
	return &this
}

// NewUpdateLegalAccountDetailsOutputWithDefaults instantiates a new UpdateLegalAccountDetailsOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateLegalAccountDetailsOutputWithDefaults() *UpdateLegalAccountDetailsOutput {
	this := UpdateLegalAccountDetailsOutput{}
	return &this
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *UpdateLegalAccountDetailsOutput) GetAccount() LegalAccount {
	if o == nil || o.Account == nil {
		var ret LegalAccount
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLegalAccountDetailsOutput) GetAccountOk() (*LegalAccount, bool) {
	if o == nil || o.Account == nil {
		return nil, false
	}
	return o.Account, true
}

// HasAccount returns a boolean if a field has been set.
func (o *UpdateLegalAccountDetailsOutput) HasAccount() bool {
	if o != nil && o.Account != nil {
		return true
	}

	return false
}

// SetAccount gets a reference to the given LegalAccount and assigns it to the Account field.
func (o *UpdateLegalAccountDetailsOutput) SetAccount(v LegalAccount) {
	o.Account = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *UpdateLegalAccountDetailsOutput) GetError() Error {
	if o == nil || o.Error == nil {
		var ret Error
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLegalAccountDetailsOutput) GetErrorOk() (*Error, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *UpdateLegalAccountDetailsOutput) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given Error and assigns it to the Error field.
func (o *UpdateLegalAccountDetailsOutput) SetError(v Error) {
	o.Error = &v
}

func (o UpdateLegalAccountDetailsOutput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Account != nil {
		toSerialize["account"] = o.Account
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateLegalAccountDetailsOutput struct {
	value *UpdateLegalAccountDetailsOutput
	isSet bool
}

func (v NullableUpdateLegalAccountDetailsOutput) Get() *UpdateLegalAccountDetailsOutput {
	return v.value
}

func (v *NullableUpdateLegalAccountDetailsOutput) Set(val *UpdateLegalAccountDetailsOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateLegalAccountDetailsOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateLegalAccountDetailsOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateLegalAccountDetailsOutput(val *UpdateLegalAccountDetailsOutput) *NullableUpdateLegalAccountDetailsOutput {
	return &NullableUpdateLegalAccountDetailsOutput{value: val, isSet: true}
}

func (v NullableUpdateLegalAccountDetailsOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateLegalAccountDetailsOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


