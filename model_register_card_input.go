/*
Lemonway DirectKit API 2.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RegisterCardInput struct for RegisterCardInput
type RegisterCardInput struct {
	// Payment Account ID
	AccountId string `json:"accountId"`
	Card CardInfo `json:"card"`
	// Leave Empty
	SpecialConfiguration *string `json:"specialConfiguration,omitempty"`
}

// NewRegisterCardInput instantiates a new RegisterCardInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegisterCardInput(accountId string, card CardInfo) *RegisterCardInput {
	this := RegisterCardInput{}
	this.AccountId = accountId
	this.Card = card
	return &this
}

// NewRegisterCardInputWithDefaults instantiates a new RegisterCardInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegisterCardInputWithDefaults() *RegisterCardInput {
	this := RegisterCardInput{}
	return &this
}

// GetAccountId returns the AccountId field value
func (o *RegisterCardInput) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *RegisterCardInput) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *RegisterCardInput) SetAccountId(v string) {
	o.AccountId = v
}

// GetCard returns the Card field value
func (o *RegisterCardInput) GetCard() CardInfo {
	if o == nil {
		var ret CardInfo
		return ret
	}

	return o.Card
}

// GetCardOk returns a tuple with the Card field value
// and a boolean to check if the value has been set.
func (o *RegisterCardInput) GetCardOk() (*CardInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Card, true
}

// SetCard sets field value
func (o *RegisterCardInput) SetCard(v CardInfo) {
	o.Card = v
}

// GetSpecialConfiguration returns the SpecialConfiguration field value if set, zero value otherwise.
func (o *RegisterCardInput) GetSpecialConfiguration() string {
	if o == nil || o.SpecialConfiguration == nil {
		var ret string
		return ret
	}
	return *o.SpecialConfiguration
}

// GetSpecialConfigurationOk returns a tuple with the SpecialConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisterCardInput) GetSpecialConfigurationOk() (*string, bool) {
	if o == nil || o.SpecialConfiguration == nil {
		return nil, false
	}
	return o.SpecialConfiguration, true
}

// HasSpecialConfiguration returns a boolean if a field has been set.
func (o *RegisterCardInput) HasSpecialConfiguration() bool {
	if o != nil && o.SpecialConfiguration != nil {
		return true
	}

	return false
}

// SetSpecialConfiguration gets a reference to the given string and assigns it to the SpecialConfiguration field.
func (o *RegisterCardInput) SetSpecialConfiguration(v string) {
	o.SpecialConfiguration = &v
}

func (o RegisterCardInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["accountId"] = o.AccountId
	}
	if true {
		toSerialize["card"] = o.Card
	}
	if o.SpecialConfiguration != nil {
		toSerialize["specialConfiguration"] = o.SpecialConfiguration
	}
	return json.Marshal(toSerialize)
}

type NullableRegisterCardInput struct {
	value *RegisterCardInput
	isSet bool
}

func (v NullableRegisterCardInput) Get() *RegisterCardInput {
	return v.value
}

func (v *NullableRegisterCardInput) Set(val *RegisterCardInput) {
	v.value = val
	v.isSet = true
}

func (v NullableRegisterCardInput) IsSet() bool {
	return v.isSet
}

func (v *NullableRegisterCardInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegisterCardInput(val *RegisterCardInput) *NullableRegisterCardInput {
	return &NullableRegisterCardInput{value: val, isSet: true}
}

func (v NullableRegisterCardInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegisterCardInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


