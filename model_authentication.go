/*
Lemonway DirectKit API 2.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Authentication struct for Authentication
type Authentication struct {
	// Possible Authentication Methods: <br />  - NOAUTHENT = 1 - No authentication of the customer by the merchant                                                       - OWNCREDENTIAL = 2 - Customer authentication by the merchant using his own system                                            - FEDERATEDID = 3 - Customer authentication by the merchant using an identifier federated(facebook, ...) (e.g.Facebook)    - ISSUERID = 4 - Customer authentication by the merchant using information of the issuer's payment mean                  - THIRDPARTY = 5 - Customer authentication by the merchant using a third system                                            - FIDO = 6 - Customer authentication by the merchant with FIDO(Fast IDentity Online) system
	MerchantCustomerAuthentMethod *string `json:"merchantCustomerAuthentMethod,omitempty"`
	// ISO8601 date time format
	MerchantCustomerAuthentDateTime *string `json:"merchantCustomerAuthentDateTime,omitempty"`
}

// NewAuthentication instantiates a new Authentication object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthentication() *Authentication {
	this := Authentication{}
	return &this
}

// NewAuthenticationWithDefaults instantiates a new Authentication object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthenticationWithDefaults() *Authentication {
	this := Authentication{}
	return &this
}

// GetMerchantCustomerAuthentMethod returns the MerchantCustomerAuthentMethod field value if set, zero value otherwise.
func (o *Authentication) GetMerchantCustomerAuthentMethod() string {
	if o == nil || o.MerchantCustomerAuthentMethod == nil {
		var ret string
		return ret
	}
	return *o.MerchantCustomerAuthentMethod
}

// GetMerchantCustomerAuthentMethodOk returns a tuple with the MerchantCustomerAuthentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Authentication) GetMerchantCustomerAuthentMethodOk() (*string, bool) {
	if o == nil || o.MerchantCustomerAuthentMethod == nil {
		return nil, false
	}
	return o.MerchantCustomerAuthentMethod, true
}

// HasMerchantCustomerAuthentMethod returns a boolean if a field has been set.
func (o *Authentication) HasMerchantCustomerAuthentMethod() bool {
	if o != nil && o.MerchantCustomerAuthentMethod != nil {
		return true
	}

	return false
}

// SetMerchantCustomerAuthentMethod gets a reference to the given string and assigns it to the MerchantCustomerAuthentMethod field.
func (o *Authentication) SetMerchantCustomerAuthentMethod(v string) {
	o.MerchantCustomerAuthentMethod = &v
}

// GetMerchantCustomerAuthentDateTime returns the MerchantCustomerAuthentDateTime field value if set, zero value otherwise.
func (o *Authentication) GetMerchantCustomerAuthentDateTime() string {
	if o == nil || o.MerchantCustomerAuthentDateTime == nil {
		var ret string
		return ret
	}
	return *o.MerchantCustomerAuthentDateTime
}

// GetMerchantCustomerAuthentDateTimeOk returns a tuple with the MerchantCustomerAuthentDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Authentication) GetMerchantCustomerAuthentDateTimeOk() (*string, bool) {
	if o == nil || o.MerchantCustomerAuthentDateTime == nil {
		return nil, false
	}
	return o.MerchantCustomerAuthentDateTime, true
}

// HasMerchantCustomerAuthentDateTime returns a boolean if a field has been set.
func (o *Authentication) HasMerchantCustomerAuthentDateTime() bool {
	if o != nil && o.MerchantCustomerAuthentDateTime != nil {
		return true
	}

	return false
}

// SetMerchantCustomerAuthentDateTime gets a reference to the given string and assigns it to the MerchantCustomerAuthentDateTime field.
func (o *Authentication) SetMerchantCustomerAuthentDateTime(v string) {
	o.MerchantCustomerAuthentDateTime = &v
}

func (o Authentication) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MerchantCustomerAuthentMethod != nil {
		toSerialize["merchantCustomerAuthentMethod"] = o.MerchantCustomerAuthentMethod
	}
	if o.MerchantCustomerAuthentDateTime != nil {
		toSerialize["merchantCustomerAuthentDateTime"] = o.MerchantCustomerAuthentDateTime
	}
	return json.Marshal(toSerialize)
}

type NullableAuthentication struct {
	value *Authentication
	isSet bool
}

func (v NullableAuthentication) Get() *Authentication {
	return v.value
}

func (v *NullableAuthentication) Set(val *Authentication) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthentication) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthentication) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthentication(val *Authentication) *NullableAuthentication {
	return &NullableAuthentication{value: val, isSet: true}
}

func (v NullableAuthentication) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthentication) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


