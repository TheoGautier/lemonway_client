/*
Lemonway DirectKit API 2.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AccountIbansOutput struct for AccountIbansOutput
type AccountIbansOutput struct {
	// List of documents that changed since the entry date.
	Ibans []Iban `json:"ibans,omitempty"`
	Error *Error `json:"error,omitempty"`
}

// NewAccountIbansOutput instantiates a new AccountIbansOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountIbansOutput() *AccountIbansOutput {
	this := AccountIbansOutput{}
	return &this
}

// NewAccountIbansOutputWithDefaults instantiates a new AccountIbansOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountIbansOutputWithDefaults() *AccountIbansOutput {
	this := AccountIbansOutput{}
	return &this
}

// GetIbans returns the Ibans field value if set, zero value otherwise.
func (o *AccountIbansOutput) GetIbans() []Iban {
	if o == nil || o.Ibans == nil {
		var ret []Iban
		return ret
	}
	return o.Ibans
}

// GetIbansOk returns a tuple with the Ibans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountIbansOutput) GetIbansOk() ([]Iban, bool) {
	if o == nil || o.Ibans == nil {
		return nil, false
	}
	return o.Ibans, true
}

// HasIbans returns a boolean if a field has been set.
func (o *AccountIbansOutput) HasIbans() bool {
	if o != nil && o.Ibans != nil {
		return true
	}

	return false
}

// SetIbans gets a reference to the given []Iban and assigns it to the Ibans field.
func (o *AccountIbansOutput) SetIbans(v []Iban) {
	o.Ibans = v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *AccountIbansOutput) GetError() Error {
	if o == nil || o.Error == nil {
		var ret Error
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountIbansOutput) GetErrorOk() (*Error, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *AccountIbansOutput) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given Error and assigns it to the Error field.
func (o *AccountIbansOutput) SetError(v Error) {
	o.Error = &v
}

func (o AccountIbansOutput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Ibans != nil {
		toSerialize["ibans"] = o.Ibans
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullableAccountIbansOutput struct {
	value *AccountIbansOutput
	isSet bool
}

func (v NullableAccountIbansOutput) Get() *AccountIbansOutput {
	return v.value
}

func (v *NullableAccountIbansOutput) Set(val *AccountIbansOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountIbansOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountIbansOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountIbansOutput(val *AccountIbansOutput) *NullableAccountIbansOutput {
	return &NullableAccountIbansOutput{value: val, isSet: true}
}

func (v NullableAccountIbansOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountIbansOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


