/*
Lemonway DirectKit API 2.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KycStatusOutput struct for KycStatusOutput
type KycStatusOutput struct {
	Accounts []AccountKycStatus `json:"accounts,omitempty"`
	Links *Links `json:"_links,omitempty"`
	Error *Error `json:"error,omitempty"`
}

// NewKycStatusOutput instantiates a new KycStatusOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKycStatusOutput() *KycStatusOutput {
	this := KycStatusOutput{}
	return &this
}

// NewKycStatusOutputWithDefaults instantiates a new KycStatusOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKycStatusOutputWithDefaults() *KycStatusOutput {
	this := KycStatusOutput{}
	return &this
}

// GetAccounts returns the Accounts field value if set, zero value otherwise.
func (o *KycStatusOutput) GetAccounts() []AccountKycStatus {
	if o == nil || o.Accounts == nil {
		var ret []AccountKycStatus
		return ret
	}
	return o.Accounts
}

// GetAccountsOk returns a tuple with the Accounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KycStatusOutput) GetAccountsOk() ([]AccountKycStatus, bool) {
	if o == nil || o.Accounts == nil {
		return nil, false
	}
	return o.Accounts, true
}

// HasAccounts returns a boolean if a field has been set.
func (o *KycStatusOutput) HasAccounts() bool {
	if o != nil && o.Accounts != nil {
		return true
	}

	return false
}

// SetAccounts gets a reference to the given []AccountKycStatus and assigns it to the Accounts field.
func (o *KycStatusOutput) SetAccounts(v []AccountKycStatus) {
	o.Accounts = v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *KycStatusOutput) GetLinks() Links {
	if o == nil || o.Links == nil {
		var ret Links
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KycStatusOutput) GetLinksOk() (*Links, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *KycStatusOutput) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given Links and assigns it to the Links field.
func (o *KycStatusOutput) SetLinks(v Links) {
	o.Links = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *KycStatusOutput) GetError() Error {
	if o == nil || o.Error == nil {
		var ret Error
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KycStatusOutput) GetErrorOk() (*Error, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *KycStatusOutput) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given Error and assigns it to the Error field.
func (o *KycStatusOutput) SetError(v Error) {
	o.Error = &v
}

func (o KycStatusOutput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Accounts != nil {
		toSerialize["accounts"] = o.Accounts
	}
	if o.Links != nil {
		toSerialize["_links"] = o.Links
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullableKycStatusOutput struct {
	value *KycStatusOutput
	isSet bool
}

func (v NullableKycStatusOutput) Get() *KycStatusOutput {
	return v.value
}

func (v *NullableKycStatusOutput) Set(val *KycStatusOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableKycStatusOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableKycStatusOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKycStatusOutput(val *KycStatusOutput) *NullableKycStatusOutput {
	return &NullableKycStatusOutput{value: val, isSet: true}
}

func (v NullableKycStatusOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKycStatusOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


