/*
Lemonway DirectKit API 2.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DisablePaymentFormOutput struct for DisablePaymentFormOutput
type DisablePaymentFormOutput struct {
	Message *string `json:"message,omitempty"`
	Error *Error `json:"error,omitempty"`
}

// NewDisablePaymentFormOutput instantiates a new DisablePaymentFormOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDisablePaymentFormOutput() *DisablePaymentFormOutput {
	this := DisablePaymentFormOutput{}
	return &this
}

// NewDisablePaymentFormOutputWithDefaults instantiates a new DisablePaymentFormOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDisablePaymentFormOutputWithDefaults() *DisablePaymentFormOutput {
	this := DisablePaymentFormOutput{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *DisablePaymentFormOutput) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DisablePaymentFormOutput) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *DisablePaymentFormOutput) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *DisablePaymentFormOutput) SetMessage(v string) {
	o.Message = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *DisablePaymentFormOutput) GetError() Error {
	if o == nil || o.Error == nil {
		var ret Error
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DisablePaymentFormOutput) GetErrorOk() (*Error, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *DisablePaymentFormOutput) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given Error and assigns it to the Error field.
func (o *DisablePaymentFormOutput) SetError(v Error) {
	o.Error = &v
}

func (o DisablePaymentFormOutput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullableDisablePaymentFormOutput struct {
	value *DisablePaymentFormOutput
	isSet bool
}

func (v NullableDisablePaymentFormOutput) Get() *DisablePaymentFormOutput {
	return v.value
}

func (v *NullableDisablePaymentFormOutput) Set(val *DisablePaymentFormOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableDisablePaymentFormOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableDisablePaymentFormOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDisablePaymentFormOutput(val *DisablePaymentFormOutput) *NullableDisablePaymentFormOutput {
	return &NullableDisablePaymentFormOutput{value: val, isSet: true}
}

func (v NullableDisablePaymentFormOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDisablePaymentFormOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


