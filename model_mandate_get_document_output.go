/*
Lemonway DirectKit API 2.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MandateGetDocumentOutput Output of the MandateGetDocument method
type MandateGetDocumentOutput struct {
	// Document in base64
	Document *string `json:"document,omitempty"`
	// Document name
	Name *string `json:"name,omitempty"`
	Error *Error `json:"error,omitempty"`
}

// NewMandateGetDocumentOutput instantiates a new MandateGetDocumentOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMandateGetDocumentOutput() *MandateGetDocumentOutput {
	this := MandateGetDocumentOutput{}
	return &this
}

// NewMandateGetDocumentOutputWithDefaults instantiates a new MandateGetDocumentOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMandateGetDocumentOutputWithDefaults() *MandateGetDocumentOutput {
	this := MandateGetDocumentOutput{}
	return &this
}

// GetDocument returns the Document field value if set, zero value otherwise.
func (o *MandateGetDocumentOutput) GetDocument() string {
	if o == nil || o.Document == nil {
		var ret string
		return ret
	}
	return *o.Document
}

// GetDocumentOk returns a tuple with the Document field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MandateGetDocumentOutput) GetDocumentOk() (*string, bool) {
	if o == nil || o.Document == nil {
		return nil, false
	}
	return o.Document, true
}

// HasDocument returns a boolean if a field has been set.
func (o *MandateGetDocumentOutput) HasDocument() bool {
	if o != nil && o.Document != nil {
		return true
	}

	return false
}

// SetDocument gets a reference to the given string and assigns it to the Document field.
func (o *MandateGetDocumentOutput) SetDocument(v string) {
	o.Document = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MandateGetDocumentOutput) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MandateGetDocumentOutput) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MandateGetDocumentOutput) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MandateGetDocumentOutput) SetName(v string) {
	o.Name = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *MandateGetDocumentOutput) GetError() Error {
	if o == nil || o.Error == nil {
		var ret Error
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MandateGetDocumentOutput) GetErrorOk() (*Error, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *MandateGetDocumentOutput) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given Error and assigns it to the Error field.
func (o *MandateGetDocumentOutput) SetError(v Error) {
	o.Error = &v
}

func (o MandateGetDocumentOutput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Document != nil {
		toSerialize["document"] = o.Document
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullableMandateGetDocumentOutput struct {
	value *MandateGetDocumentOutput
	isSet bool
}

func (v NullableMandateGetDocumentOutput) Get() *MandateGetDocumentOutput {
	return v.value
}

func (v *NullableMandateGetDocumentOutput) Set(val *MandateGetDocumentOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableMandateGetDocumentOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableMandateGetDocumentOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMandateGetDocumentOutput(val *MandateGetDocumentOutput) *NullableMandateGetDocumentOutput {
	return &NullableMandateGetDocumentOutput{value: val, isSet: true}
}

func (v NullableMandateGetDocumentOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMandateGetDocumentOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


