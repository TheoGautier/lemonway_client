/*
Lemonway DirectKit API 2.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AccountBalanceOutput struct for AccountBalanceOutput
type AccountBalanceOutput struct {
	Accounts []AccountBalance `json:"accounts,omitempty"`
	Links *Links `json:"_links,omitempty"`
	Error *Error `json:"error,omitempty"`
}

// NewAccountBalanceOutput instantiates a new AccountBalanceOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountBalanceOutput() *AccountBalanceOutput {
	this := AccountBalanceOutput{}
	return &this
}

// NewAccountBalanceOutputWithDefaults instantiates a new AccountBalanceOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountBalanceOutputWithDefaults() *AccountBalanceOutput {
	this := AccountBalanceOutput{}
	return &this
}

// GetAccounts returns the Accounts field value if set, zero value otherwise.
func (o *AccountBalanceOutput) GetAccounts() []AccountBalance {
	if o == nil || o.Accounts == nil {
		var ret []AccountBalance
		return ret
	}
	return o.Accounts
}

// GetAccountsOk returns a tuple with the Accounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountBalanceOutput) GetAccountsOk() ([]AccountBalance, bool) {
	if o == nil || o.Accounts == nil {
		return nil, false
	}
	return o.Accounts, true
}

// HasAccounts returns a boolean if a field has been set.
func (o *AccountBalanceOutput) HasAccounts() bool {
	if o != nil && o.Accounts != nil {
		return true
	}

	return false
}

// SetAccounts gets a reference to the given []AccountBalance and assigns it to the Accounts field.
func (o *AccountBalanceOutput) SetAccounts(v []AccountBalance) {
	o.Accounts = v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *AccountBalanceOutput) GetLinks() Links {
	if o == nil || o.Links == nil {
		var ret Links
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountBalanceOutput) GetLinksOk() (*Links, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *AccountBalanceOutput) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given Links and assigns it to the Links field.
func (o *AccountBalanceOutput) SetLinks(v Links) {
	o.Links = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *AccountBalanceOutput) GetError() Error {
	if o == nil || o.Error == nil {
		var ret Error
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountBalanceOutput) GetErrorOk() (*Error, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *AccountBalanceOutput) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given Error and assigns it to the Error field.
func (o *AccountBalanceOutput) SetError(v Error) {
	o.Error = &v
}

func (o AccountBalanceOutput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Accounts != nil {
		toSerialize["accounts"] = o.Accounts
	}
	if o.Links != nil {
		toSerialize["_links"] = o.Links
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullableAccountBalanceOutput struct {
	value *AccountBalanceOutput
	isSet bool
}

func (v NullableAccountBalanceOutput) Get() *AccountBalanceOutput {
	return v.value
}

func (v *NullableAccountBalanceOutput) Set(val *AccountBalanceOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountBalanceOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountBalanceOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountBalanceOutput(val *AccountBalanceOutput) *NullableAccountBalanceOutput {
	return &NullableAccountBalanceOutput{value: val, isSet: true}
}

func (v NullableAccountBalanceOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountBalanceOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


